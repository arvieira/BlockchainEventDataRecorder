{"version":3,"file":"vega-hierarchy.min.js","sources":["../src/lookup.js","../../../node_modules/d3-hierarchy/src/cluster.js","../../../node_modules/d3-hierarchy/src/hierarchy/count.js","../../../node_modules/d3-hierarchy/src/hierarchy/index.js","../../../node_modules/d3-hierarchy/src/pack/enclose.js","../../../node_modules/d3-hierarchy/src/array.js","../../../node_modules/d3-hierarchy/src/pack/siblings.js","../../../node_modules/d3-hierarchy/src/accessors.js","../../../node_modules/d3-hierarchy/src/constant.js","../../../node_modules/d3-hierarchy/src/pack/index.js","../../../node_modules/d3-hierarchy/src/treemap/round.js","../../../node_modules/d3-hierarchy/src/treemap/dice.js","../../../node_modules/d3-hierarchy/src/hierarchy/each.js","../../../node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","../../../node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","../../../node_modules/d3-hierarchy/src/hierarchy/find.js","../../../node_modules/d3-hierarchy/src/hierarchy/sum.js","../../../node_modules/d3-hierarchy/src/hierarchy/sort.js","../../../node_modules/d3-hierarchy/src/hierarchy/path.js","../../../node_modules/d3-hierarchy/src/hierarchy/ancestors.js","../../../node_modules/d3-hierarchy/src/hierarchy/descendants.js","../../../node_modules/d3-hierarchy/src/hierarchy/leaves.js","../../../node_modules/d3-hierarchy/src/hierarchy/links.js","../../../node_modules/d3-hierarchy/src/hierarchy/iterator.js","../../../node_modules/d3-hierarchy/src/stratify.js","../../../node_modules/d3-hierarchy/src/tree.js","../../../node_modules/d3-hierarchy/src/treemap/slice.js","../../../node_modules/d3-hierarchy/src/treemap/squarify.js","../../../node_modules/d3-hierarchy/src/treemap/resquarify.js","../src/Nest.js","../src/HierarchyLayout.js","../src/Pack.js","../src/Partition.js","../src/Stratify.js","../../../node_modules/d3-hierarchy/src/partition.js","../src/Tree.js","../src/TreeLinks.js","../src/Treemap.js","../../../node_modules/d3-hierarchy/src/treemap/binary.js","../../../node_modules/d3-hierarchy/src/treemap/sliceDice.js","../../../node_modules/d3-hierarchy/src/treemap/index.js"],"sourcesContent":["// Build lookup table mapping tuple keys to tree node instances\nexport default function(tree, key, filter) {\n  const map = {};\n  tree.each(node => {\n    const t = node.data;\n    if (filter(t)) map[key(t)] = node;\n  });\n  tree.lookup = map;\n  return tree;\n}\n","function defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n}\n","function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n","import node_count from \"./count.js\";\nimport node_each from \"./each.js\";\nimport node_eachBefore from \"./eachBefore.js\";\nimport node_eachAfter from \"./eachAfter.js\";\nimport node_find from \"./find.js\";\nimport node_sum from \"./sum.js\";\nimport node_sort from \"./sort.js\";\nimport node_path from \"./path.js\";\nimport node_ancestors from \"./ancestors.js\";\nimport node_descendants from \"./descendants.js\";\nimport node_leaves from \"./leaves.js\";\nimport node_links from \"./links.js\";\nimport node_iterator from \"./iterator.js\";\n\nexport default function hierarchy(data, children) {\n  if (data instanceof Map) {\n    data = [undefined, data];\n    if (children === undefined) children = mapChildren;\n  } else if (children === undefined) {\n    children = objectChildren;\n  }\n\n  var root = new Node(data),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if ((childs = children(node.data)) && (n = (childs = Array.from(childs)).length)) {\n      node.children = childs;\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = childs[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction objectChildren(d) {\n  return d.children;\n}\n\nfunction mapChildren(d) {\n  return Array.isArray(d) ? d[1] : null;\n}\n\nfunction copyData(node) {\n  if (node.data.value !== undefined) node.value = node.data.value;\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  find: node_find,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy,\n  [Symbol.iterator]: node_iterator\n};\n","import {shuffle} from \"../array.js\";\n\nexport default function(circles) {\n  var i = 0, n = (circles = shuffle(Array.from(circles))).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n}\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + Math.max(a.r, b.r, 1) * 1e-9, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n","export default function(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n\nexport function shuffle(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n","import array from \"../array.js\";\nimport enclose from \"./enclose.js\";\n\nfunction place(b, a, c) {\n  var dx = b.x - a.x, x, a2,\n      dy = b.y - a.y, y, b2,\n      d2 = dx * dx + dy * dy;\n  if (d2) {\n    a2 = a.r + c.r, a2 *= a2;\n    b2 = b.r + c.r, b2 *= b2;\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\n\nfunction intersects(a, b) {\n  var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nexport function packEnclose(circles) {\n  if (!(n = (circles = array(circles)).length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node(a), b = new Node(b), c = new Node(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nexport default function(circles) {\n  packEnclose(circles);\n  return circles;\n}\n","export function optional(f) {\n  return f == null ? null : required(f);\n}\n\nexport function required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n","export function constantZero() {\n  return 0;\n}\n\nexport default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {packEnclose} from \"./siblings.js\";\nimport {optional} from \"../accessors.js\";\nimport constant, {constantZero} from \"../constant.js\";\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nexport default function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n","export default function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n","export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n","export default function(callback, that) {\n  var node = this, nodes = [node], next = [], children, i, n, index = -1;\n  while (node = nodes.pop()) {\n    next.push(node);\n    if (children = node.children) {\n      for (i = 0, n = children.length; i < n; ++i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  while (node = next.pop()) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n","export default function(callback, that) {\n  var node = this, nodes = [node], children, i, index = -1;\n  while (node = nodes.pop()) {\n    callback.call(that, node, ++index, this);\n    if (children = node.children) {\n      for (i = children.length - 1; i >= 0; --i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  return this;\n}\n","export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    if (callback.call(that, node, ++index, this)) {\n      return node;\n    }\n  }\n}\n","export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n","export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n","export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n","export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n","export default function() {\n  return Array.from(this);\n}\n","export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n","export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n","export default function*() {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      yield node;\n      if (children = node.children) {\n        for (i = 0, n = children.length; i < n; ++i) {\n          next.push(children[i]);\n        }\n      }\n    }\n  } while (next.length);\n}\n","import {optional} from \"./accessors.js\";\nimport {Node, computeHeight} from \"./hierarchy/index.js\";\n\nvar preroot = {depth: -1},\n    ambiguous = {},\n    imputed = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nexport default function() {\n  var id = defaultId,\n      parentId = defaultParentId,\n      path;\n\n  function stratify(data) {\n    var nodes = Array.from(data),\n        currentId = id,\n        currentParentId = parentId,\n        n,\n        d,\n        i,\n        root,\n        parent,\n        node,\n        nodeId,\n        nodeKey,\n        nodeByKey = new Map;\n\n    if (path != null) {\n      const I = nodes.map((d, i) => normalize(path(d, i, data)));\n      const P = I.map(parentof);\n      const S = new Set(I).add(\"\");\n      for (const i of P) {\n        if (!S.has(i)) {\n          S.add(i);\n          I.push(i);\n          P.push(parentof(i));\n          nodes.push(imputed);\n        }\n      }\n      currentId = (_, i) => I[i];\n      currentParentId = (_, i) => P[i];\n    }\n\n    for (i = 0, n = nodes.length; i < n; ++i) {\n      d = nodes[i], node = nodes[i] = new Node(d);\n      if ((nodeId = currentId(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = node.id = nodeId;\n        nodeByKey.set(nodeKey, nodeByKey.has(nodeKey) ? ambiguous : node);\n      }\n      if ((nodeId = currentParentId(d, i, data)) != null && (nodeId += \"\")) {\n        node.parent = nodeId;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (nodeId = node.parent) {\n        parent = nodeByKey.get(nodeId);\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      } else {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n\n    // When imputing internal nodes, only introduce roots if needed.\n    // Then replace the imputed marker data with null.\n    if (path != null) {\n      while (root.data === imputed && root.children.length === 1) {\n        root = root.children[0], --n;\n      }\n      for (let i = nodes.length - 1; i >= 0; --i) {\n        node = nodes[i];\n        if (node.data !== imputed) break;\n        node.data = null;\n      }\n    }\n\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = optional(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = optional(x), stratify) : parentId;\n  };\n\n  stratify.path = function(x) {\n    return arguments.length ? (path = optional(x), stratify) : path;\n  };\n\n  return stratify;\n}\n\n// To normalize a path, we coerce to a string, strip the trailing slash if any\n// (as long as the trailing slash is not immediately preceded by another slash),\n// and add leading slash if missing.\nfunction normalize(path) {\n  path = `${path}`;\n  let i = path.length;\n  if (slash(path, i - 1) && !slash(path, i - 2)) path = path.slice(0, -1);\n  return path[0] === \"/\" ? path : `/${path}`;\n}\n\n// Walk backwards to find the first slash that is not the leading slash, e.g.:\n// \"/foo/bar\" ⇥ \"/foo\", \"/foo\" ⇥ \"/\", \"/\" ↦ \"\". (The root is special-cased\n// because the id of the root must be a truthy value.)\nfunction parentof(path) {\n  let i = path.length;\n  if (i < 2) return \"\";\n  while (--i > 1) if (slash(path, i)) break;\n  return path.slice(0, i);\n}\n\n// Slashes can be escaped; to determine whether a slash is a path delimiter, we\n// count the number of preceding backslashes escaping the forward slash: an odd\n// number indicates an escaped forward slash.\nfunction slash(path, i) {\n  if (path[i] === \"/\") {\n    let k = 0;\n    while (i > 0 && path[--i] === \"\\\\\") ++k;\n    if ((k & 1) === 0) return true;\n  }\n  return false;\n}\n","import {Node} from \"./hierarchy/index.js\";\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n","import treemapDice from \"./dice.js\";\nimport treemapSlice from \"./slice.js\";\n\nexport var phi = (1 + Math.sqrt(5)) / 2;\n\nexport function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nexport default (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n","import treemapDice from \"./dice.js\";\nimport treemapSlice from \"./slice.js\";\nimport {phi, squarifyRatio} from \"./squarify.js\";\n\nexport default (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += (y1 - y0) * row.value / value : y1);\n        else treemapSlice(row, x0, y0, value ? x0 += (x1 - x0) * row.value / value : x1, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n","import lookup from './lookup';\nimport {Transform, ingest, isTuple, tupleid} from 'vega-dataflow';\nimport {array, error, inherits} from 'vega-util';\nimport {hierarchy} from 'd3-hierarchy';\n\n /**\n  * Nest tuples into a tree structure, grouped by key values.\n  * @constructor\n  * @param {object} params - The parameters for this operator.\n  * @param {Array<function(object): *>} params.keys - The key fields to nest by, in order.\n  * @param {boolean} [params.generate=false] - A boolean flag indicating if\n  *   non-leaf nodes generated by this transform should be included in the\n  *   output. The default (false) includes only the input data (leaf nodes)\n  *   in the data stream.\n  */\nexport default function Nest(params) {\n  Transform.call(this, null, params);\n}\n\nNest.Definition = {\n  'type': 'Nest',\n  'metadata': {'treesource': true, 'changes': true},\n  'params': [\n    { 'name': 'keys', 'type': 'field', 'array': true },\n    { 'name': 'generate', 'type': 'boolean' }\n  ]\n};\n\nconst children = n => n.values;\n\ninherits(Nest, Transform, {\n  transform(_, pulse) {\n    if (!pulse.source) {\n      error('Nest transform requires an upstream data source.');\n    }\n\n    var gen = _.generate,\n        mod = _.modified(),\n        out = pulse.clone(),\n        tree = this.value;\n\n    if (!tree || mod || pulse.changed()) {\n      // collect nodes to remove\n      if (tree) {\n        tree.each(node => {\n          if (node.children && isTuple(node.data)) {\n            out.rem.push(node.data);\n          }\n        });\n      }\n\n      // generate new tree structure\n      this.value = tree = hierarchy({\n        values: array(_.keys)\n          .reduce((n, k) => { n.key(k); return n; }, nest())\n          .entries(out.source)\n      }, children);\n\n      // collect nodes to add\n      if (gen) {\n        tree.each(node => {\n          if (node.children) {\n            node = ingest(node.data);\n            out.add.push(node);\n            out.source.push(node);\n          }\n        });\n      }\n\n      // build lookup table\n      lookup(tree, tupleid, tupleid);\n    }\n\n    out.source.root = tree;\n    return out;\n  }\n});\n\nfunction nest() {\n  const keys = [],\n        nest = {\n          entries: array => entries(apply(array, 0), 0),\n          key: d => (keys.push(d), nest)\n        };\n\n  function apply(array, depth) {\n    if (depth >= keys.length) {\n      return array;\n    }\n\n    const n = array.length,\n          key = keys[depth++],\n          valuesByKey = {},\n          result = {};\n\n    let i = -1, keyValue, value, values;\n\n    while (++i < n) {\n      keyValue = key(value = array[i]) + '';\n      if (values = valuesByKey[keyValue]) {\n        values.push(value);\n      } else {\n        valuesByKey[keyValue] = [value];\n      }\n    }\n\n    for (keyValue in valuesByKey) {\n      result[keyValue] = apply(valuesByKey[keyValue], depth);\n    }\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    const array = [];\n    for (const key in map) {\n      array.push({\n        key,\n        values: entries(map[key], depth)\n      });\n    }\n    return array;\n  }\n\n  return nest;\n}\n","import {Transform, stableCompare} from 'vega-dataflow';\nimport {error, inherits, one} from 'vega-util';\n\n/**\n * Abstract class for tree layout.\n * @constructor\n * @param {object} params - The parameters for this operator.\n */\nexport default function HierarchyLayout(params) {\n  Transform.call(this, null, params);\n}\n\nconst defaultSeparation = (a, b) => a.parent === b.parent ? 1 : 2;\n\ninherits(HierarchyLayout, Transform, {\n  transform(_, pulse) {\n    if (!pulse.source || !pulse.source.root) {\n      error(this.constructor.name\n        + ' transform requires a backing tree data source.');\n    }\n\n    const layout = this.layout(_.method),\n          fields = this.fields,\n          root = pulse.source.root,\n          as = _.as || fields;\n\n    if (_.field) root.sum(_.field); else root.count();\n    if (_.sort) root.sort(stableCompare(_.sort, d => d.data));\n\n    setParams(layout, this.params, _);\n    if (layout.separation) {\n      layout.separation(_.separation !== false ? defaultSeparation : one);\n    }\n\n    try {\n      this.value = layout(root);\n    } catch (err) {\n      error(err);\n    }\n    root.each(node => setFields(node, fields, as));\n\n    return pulse.reflow(_.modified()).modifies(as).modifies('leaf');\n  }\n});\n\nfunction setParams(layout, params, _) {\n  for (let p, i=0, n=params.length; i<n; ++i) {\n    p = params[i];\n    if (p in _) layout[p](_[p]);\n  }\n}\n\nfunction setFields(node, fields, as) {\n  const t = node.data,\n        n = fields.length - 1;\n  for (let i=0; i<n; ++i) {\n    t[as[i]] = node[fields[i]];\n  }\n  t[as[n]] = node.children ? node.children.length : 0;\n}\n","import HierarchyLayout from './HierarchyLayout';\nimport {inherits} from 'vega-util';\nimport {pack} from 'd3-hierarchy';\n\nconst Output = ['x', 'y', 'r', 'depth', 'children'];\n\n/**\n * Packed circle tree layout.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(object): *} params.field - The value field to size nodes.\n */\nexport default function Pack(params) {\n  HierarchyLayout.call(this, params);\n}\n\nPack.Definition = {\n  'type': 'Pack',\n  'metadata': {'tree': true, 'modifies': true},\n  'params': [\n    { 'name': 'field', 'type': 'field' },\n    { 'name': 'sort', 'type': 'compare' },\n    { 'name': 'padding', 'type': 'number', 'default': 0 },\n    { 'name': 'radius', 'type': 'field', 'default': null },\n    { 'name': 'size', 'type': 'number', 'array': true, 'length': 2 },\n    { 'name': 'as', 'type': 'string', 'array': true, 'length': Output.length, 'default': Output }\n  ]\n};\n\ninherits(Pack, HierarchyLayout, {\n  layout: pack,\n  params: ['radius', 'size', 'padding'],\n  fields: Output\n});\n","import HierarchyLayout from './HierarchyLayout';\nimport {inherits} from 'vega-util';\nimport {partition} from 'd3-hierarchy';\n\nconst Output = ['x0', 'y0', 'x1', 'y1', 'depth', 'children'];\n\n/**\n * Partition tree layout.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(object): *} params.field - The value field to size nodes.\n */\nexport default function Partition(params) {\n  HierarchyLayout.call(this, params);\n}\n\nPartition.Definition = {\n  'type': 'Partition',\n  'metadata': {'tree': true, 'modifies': true},\n  'params': [\n    { 'name': 'field', 'type': 'field' },\n    { 'name': 'sort', 'type': 'compare' },\n    { 'name': 'padding', 'type': 'number', 'default': 0 },\n    { 'name': 'round', 'type': 'boolean', 'default': false },\n    { 'name': 'size', 'type': 'number', 'array': true, 'length': 2 },\n    { 'name': 'as', 'type': 'string', 'array': true, 'length': Output.length, 'default': Output }\n  ]\n};\n\ninherits(Partition, HierarchyLayout, {\n  layout: partition,\n  params: ['size', 'round', 'padding'],\n  fields: Output\n});\n","import lookup from './lookup';\nimport {Transform} from 'vega-dataflow';\nimport {error, inherits, truthy} from 'vega-util';\nimport {stratify} from 'd3-hierarchy';\n\n /**\n  * Stratify a collection of tuples into a tree structure based on\n  * id and parent id fields.\n  * @constructor\n  * @param {object} params - The parameters for this operator.\n  * @param {function(object): *} params.key - Unique key field for each tuple.\n  * @param {function(object): *} params.parentKey - Field with key for parent tuple.\n  */\nexport default function Stratify(params) {\n  Transform.call(this, null, params);\n}\n\nStratify.Definition = {\n  'type': 'Stratify',\n  'metadata': {'treesource': true},\n  'params': [\n    { 'name': 'key', 'type': 'field', 'required': true },\n    { 'name': 'parentKey', 'type': 'field', 'required': true  }\n  ]\n};\n\ninherits(Stratify, Transform, {\n  transform(_, pulse) {\n    if (!pulse.source) {\n      error('Stratify transform requires an upstream data source.');\n    }\n\n    let tree = this.value;\n\n    const mod = _.modified(),\n          out = pulse.fork(pulse.ALL).materialize(pulse.SOURCE),\n          run = !tree\n            || mod\n            || pulse.changed(pulse.ADD_REM)\n            || pulse.modified(_.key.fields)\n            || pulse.modified(_.parentKey.fields);\n\n    // prevent upstream source pollution\n    out.source = out.source.slice();\n\n    if (run) {\n      tree = out.source.length\n        ? lookup(\n            stratify().id(_.key).parentId(_.parentKey)(out.source),\n            _.key,\n            truthy\n          )\n        : lookup(stratify()([{}]), _.key, _.key);\n    }\n\n    out.source.root = this.value = tree;\n    return out;\n  }\n});\n","import roundNode from \"./treemap/round.js\";\nimport treemapDice from \"./treemap/dice.js\";\n\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n}\n","import HierarchyLayout from './HierarchyLayout';\nimport {error, hasOwnProperty, inherits} from 'vega-util';\nimport {cluster, tree} from 'd3-hierarchy';\n\nconst Layouts = {\n  tidy: tree,\n  cluster: cluster\n};\n\nconst Output = ['x', 'y', 'depth', 'children'];\n\n/**\n * Tree layout. Depending on the method parameter, performs either\n * Reingold-Tilford 'tidy' layout or dendrogram 'cluster' layout.\n * @constructor\n * @param {object} params - The parameters for this operator.\n */\nexport default function Tree(params) {\n  HierarchyLayout.call(this, params);\n}\n\nTree.Definition = {\n  'type': 'Tree',\n  'metadata': {'tree': true, 'modifies': true},\n  'params': [\n    { 'name': 'field', 'type': 'field' },\n    { 'name': 'sort', 'type': 'compare' },\n    { 'name': 'method', 'type': 'enum', 'default': 'tidy', 'values': ['tidy', 'cluster'] },\n    { 'name': 'size', 'type': 'number', 'array': true, 'length': 2 },\n    { 'name': 'nodeSize', 'type': 'number', 'array': true, 'length': 2 },\n    { 'name': 'separation', 'type': 'boolean', 'default': true },\n    { 'name': 'as', 'type': 'string', 'array': true, 'length': Output.length, 'default': Output }\n  ]\n};\n\ninherits(Tree, HierarchyLayout, {\n  /**\n   * Tree layout generator. Supports both 'tidy' and 'cluster' layouts.\n   */\n  layout(method) {\n    const m = method || 'tidy';\n    if (hasOwnProperty(Layouts, m)) return Layouts[m]();\n    else error('Unrecognized Tree layout method: ' + m);\n  },\n  params: ['size', 'nodeSize'],\n  fields: Output\n});\n","import {Transform, ingest, tupleid} from 'vega-dataflow';\nimport {error, inherits} from 'vega-util';\n\n /**\n  * Generate tuples representing links between tree nodes.\n  * The resulting tuples will contain 'source' and 'target' fields,\n  * which point to parent and child node tuples, respectively.\n  * @constructor\n  * @param {object} params - The parameters for this operator.\n  */\nexport default function TreeLinks(params) {\n  Transform.call(this, [], params);\n}\n\nTreeLinks.Definition = {\n  'type': 'TreeLinks',\n  'metadata': {'tree': true, 'generates': true, 'changes': true},\n  'params': []\n};\n\ninherits(TreeLinks, Transform, {\n  transform(_, pulse) {\n    const links = this.value,\n          tree = pulse.source && pulse.source.root,\n          out = pulse.fork(pulse.NO_SOURCE),\n          lut = {};\n\n    if (!tree) error('TreeLinks transform requires a tree data source.');\n\n    if (pulse.changed(pulse.ADD_REM)) {\n      // remove previous links\n      out.rem = links;\n\n      // build lookup table of valid tuples\n      pulse.visit(pulse.SOURCE, t => lut[tupleid(t)] = 1);\n\n      // generate links for all edges incident on valid tuples\n      tree.each(node => {\n        const t = node.data,\n              p = node.parent && node.parent.data;\n        if (p && lut[tupleid(t)] && lut[tupleid(p)]) {\n          out.add.push(ingest({source: p, target: t}));\n        }\n      });\n      this.value = out.add;\n    }\n\n    else if (pulse.changed(pulse.MOD)) {\n      // build lookup table of modified tuples\n      pulse.visit(pulse.MOD, t => lut[tupleid(t)] = 1);\n\n      // gather links incident on modified tuples\n      links.forEach(link => {\n        if (lut[tupleid(link.source)] || lut[tupleid(link.target)]) {\n          out.mod.push(link);\n        }\n      });\n    }\n\n    return out;\n  }\n});\n","import HierarchyLayout from './HierarchyLayout';\nimport {error, hasOwnProperty, inherits} from 'vega-util';\nimport {\n  treemap,\n  treemapBinary,\n  treemapDice,\n  treemapResquarify,\n  treemapSlice,\n  treemapSliceDice,\n  treemapSquarify\n} from 'd3-hierarchy';\n\nconst Tiles = {\n  binary: treemapBinary,\n  dice: treemapDice,\n  slice: treemapSlice,\n  slicedice: treemapSliceDice,\n  squarify: treemapSquarify,\n  resquarify: treemapResquarify\n};\n\nconst Output = ['x0', 'y0', 'x1', 'y1', 'depth', 'children'];\n\n/**\n * Treemap layout.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(object): *} params.field - The value field to size nodes.\n */\nexport default function Treemap(params) {\n  HierarchyLayout.call(this, params);\n}\n\nTreemap.Definition = {\n  'type': 'Treemap',\n  'metadata': {'tree': true, 'modifies': true},\n  'params': [\n    { 'name': 'field', 'type': 'field' },\n    { 'name': 'sort', 'type': 'compare' },\n    { 'name': 'method', 'type': 'enum', 'default': 'squarify',\n      'values': ['squarify', 'resquarify', 'binary', 'dice', 'slice', 'slicedice'] },\n    { 'name': 'padding', 'type': 'number', 'default': 0 },\n    { 'name': 'paddingInner', 'type': 'number', 'default': 0 },\n    { 'name': 'paddingOuter', 'type': 'number', 'default': 0 },\n    { 'name': 'paddingTop', 'type': 'number', 'default': 0 },\n    { 'name': 'paddingRight', 'type': 'number', 'default': 0 },\n    { 'name': 'paddingBottom', 'type': 'number', 'default': 0 },\n    { 'name': 'paddingLeft', 'type': 'number', 'default': 0 },\n    { 'name': 'ratio', 'type': 'number', 'default': 1.618033988749895 },\n    { 'name': 'round', 'type': 'boolean', 'default': false },\n    { 'name': 'size', 'type': 'number', 'array': true, 'length': 2 },\n    { 'name': 'as', 'type': 'string', 'array': true, 'length': Output.length, 'default': Output }\n  ]\n};\n\ninherits(Treemap, HierarchyLayout, {\n  /**\n   * Treemap layout generator. Adds 'method' and 'ratio' parameters\n   * to configure the underlying tile method.\n   */\n  layout() {\n    const x = treemap();\n\n    x.ratio = _ => {\n      const t = x.tile();\n      if (t.ratio) x.tile(t.ratio(_));\n    };\n\n    x.method = _ => {\n      if (hasOwnProperty(Tiles, _)) x.tile(Tiles[_]);\n      else error('Unrecognized Treemap layout method: ' + _);\n    };\n\n    return x;\n  },\n\n  params: [\n    'method', 'ratio', 'size', 'round',\n    'padding', 'paddingInner', 'paddingOuter',\n    'paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft'\n  ],\n\n  fields: Output\n});\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = value ? (x0 * valueRight + x1 * valueLeft) / value : x1;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = value ? (y0 * valueRight + y1 * valueLeft) / value : y1;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n}\n","import dice from \"./dice.js\";\nimport slice from \"./slice.js\";\n\nexport default function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? slice : dice)(parent, x0, y0, x1, y1);\n}\n","import roundNode from \"./round.js\";\nimport squarify from \"./squarify.js\";\nimport {required} from \"../accessors.js\";\nimport constant, {constantZero} from \"../constant.js\";\n\nexport default function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n}\n"],"names":["lookup","tree","key","filter","map","each","node","t","data","defaultSeparation","a","b","parent","meanXReduce","x","c","maxYReduce","y","Math","max","count","sum","children","i","length","value","hierarchy","Map","undefined","mapChildren","objectChildren","child","childs","n","root","Node","nodes","pop","Array","from","push","depth","eachBefore","computeHeight","d","isArray","copyData","height","this","enclose","circles","p","e","array","m","random","shuffle","B","enclosesWeak","encloseBasis","extendBasis","j","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","Error","dr","r","dx","dy","x1","y1","r1","x2","y2","r2","x21","y21","r21","l","sqrt","x3","y3","r3","a2","a3","b2","b3","c2","c3","d1","d2","d3","ab","xa","xb","ya","yb","A","C","place","intersects","score","_","next","circle","previous","packEnclose","aa","ca","k","sj","sk","pack","optional","f","required","constantZero","constant","defaultRadius","radiusLeaf","radius","packChildren","padding","translateChild","roundNode","x0","round","y0","treemapDice","prototype","constructor","eachAfter","callback","that","index","call","find","sort","compare","path","end","start","ancestor","aNodes","ancestors","bNodes","leastCommonAncestor","splice","descendants","leaves","links","source","target","copy","Symbol","iterator","current","reverse","preroot","ambiguous","imputed","defaultId","id","defaultParentId","parentId","stratify","nodeId","nodeKey","currentId","currentParentId","nodeByKey","I","slash","slice","normalize","P","parentof","S","Set","add","has","set","get","arguments","nextLeft","v","nextRight","moveSubtree","wm","wp","shift","change","s","z","nextAncestor","vim","TreeNode","treemapSlice","Object","create","phi","squarifyRatio","ratio","i0","rows","row","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","alpha","beta","i1","dice","treemapSquarify","custom","squarify","treemapResquarify","resquarify","_squarify","Nest","params","Transform","Definition","type","metadata","treesource","changes","name","values","nest","keys","entries","apply","valuesByKey","result","keyValue","HierarchyLayout","inherits","transform","pulse","error","gen","generate","mod","modified","out","clone","changed","isTuple","rem","reduce","ingest","tupleid","layout","method","fields","as","field","stableCompare","setParams","separation","one","err","setFields","reflow","modifies","Output","Pack","default","min","size","Partition","Stratify","partition","positionNode","fork","ALL","materialize","SOURCE","run","ADD_REM","parentKey","truthy","Layouts","tidy","nodeSize","treeRoot","firstWalk","secondWalk","sizeNode","left","right","bottom","tx","kx","ky","siblings","w","executeShifts","midpoint","vip","vop","vom","sip","sop","sim","som","apportion","cluster","previousNode","meanX","maxY","leafLeft","leafRight","Tree","TreeLinks","hasOwnProperty","generates","NO_SOURCE","lut","visit","MOD","forEach","link","Tiles","binary","sums","valueOffset","valueTarget","hi","mid","valueLeft","valueRight","xk","yk","slicedice","Treemap","tile","paddingStack","paddingInner","paddingTop","paddingRight","paddingBottom","paddingLeft","treemap","paddingOuter"],"mappings":"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"}