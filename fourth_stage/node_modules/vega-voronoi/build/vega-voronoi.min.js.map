{"version":3,"file":"vega-voronoi.min.js","sources":["../../../node_modules/robust-predicates/esm/util.js","../../../node_modules/robust-predicates/esm/orient2d.js","../../../node_modules/delaunator/index.js","../../../node_modules/d3-delaunay/src/path.js","../../../node_modules/d3-delaunay/src/polygon.js","../../../node_modules/d3-delaunay/src/voronoi.js","../../../node_modules/d3-delaunay/src/delaunay.js","../src/Voronoi.js"],"sourcesContent":["export const epsilon = 1.1102230246251565e-16;\nexport const splitter = 134217729;\nexport const resulterrbound = (3 + 8 * epsilon) * epsilon;\n\n// fast_expansion_sum_zeroelim routine from oritinal code\nexport function sum(elen, e, flen, f, h) {\n    let Q, Qnew, hh, bvirt;\n    let enow = e[0];\n    let fnow = f[0];\n    let eindex = 0;\n    let findex = 0;\n    if ((fnow > enow) === (fnow > -enow)) {\n        Q = enow;\n        enow = e[++eindex];\n    } else {\n        Q = fnow;\n        fnow = f[++findex];\n    }\n    let hindex = 0;\n    if (eindex < elen && findex < flen) {\n        if ((fnow > enow) === (fnow > -enow)) {\n            Qnew = enow + Q;\n            hh = Q - (Qnew - enow);\n            enow = e[++eindex];\n        } else {\n            Qnew = fnow + Q;\n            hh = Q - (Qnew - fnow);\n            fnow = f[++findex];\n        }\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n        while (eindex < elen && findex < flen) {\n            if ((fnow > enow) === (fnow > -enow)) {\n                Qnew = Q + enow;\n                bvirt = Qnew - Q;\n                hh = Q - (Qnew - bvirt) + (enow - bvirt);\n                enow = e[++eindex];\n            } else {\n                Qnew = Q + fnow;\n                bvirt = Qnew - Q;\n                hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n                fnow = f[++findex];\n            }\n            Q = Qnew;\n            if (hh !== 0) {\n                h[hindex++] = hh;\n            }\n        }\n    }\n    while (eindex < elen) {\n        Qnew = Q + enow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (enow - bvirt);\n        enow = e[++eindex];\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    while (findex < flen) {\n        Qnew = Q + fnow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n        fnow = f[++findex];\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    if (Q !== 0 || hindex === 0) {\n        h[hindex++] = Q;\n    }\n    return hindex;\n}\n\nexport function sum_three(alen, a, blen, b, clen, c, tmp, out) {\n    return sum(sum(alen, a, blen, b, tmp), tmp, clen, c, out);\n}\n\n// scale_expansion_zeroelim routine from oritinal code\nexport function scale(elen, e, b, h) {\n    let Q, sum, hh, product1, product0;\n    let bvirt, c, ahi, alo, bhi, blo;\n\n    c = splitter * b;\n    bhi = c - (c - b);\n    blo = b - bhi;\n    let enow = e[0];\n    Q = enow * b;\n    c = splitter * enow;\n    ahi = c - (c - enow);\n    alo = enow - ahi;\n    hh = alo * blo - (Q - ahi * bhi - alo * bhi - ahi * blo);\n    let hindex = 0;\n    if (hh !== 0) {\n        h[hindex++] = hh;\n    }\n    for (let i = 1; i < elen; i++) {\n        enow = e[i];\n        product1 = enow * b;\n        c = splitter * enow;\n        ahi = c - (c - enow);\n        alo = enow - ahi;\n        product0 = alo * blo - (product1 - ahi * bhi - alo * bhi - ahi * blo);\n        sum = Q + product0;\n        bvirt = sum - Q;\n        hh = Q - (sum - bvirt) + (product0 - bvirt);\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n        Q = product1 + sum;\n        hh = sum - (Q - product1);\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    if (Q !== 0 || hindex === 0) {\n        h[hindex++] = Q;\n    }\n    return hindex;\n}\n\nexport function negate(elen, e) {\n    for (let i = 0; i < elen; i++) e[i] = -e[i];\n    return elen;\n}\n\nexport function estimate(elen, e) {\n    let Q = e[0];\n    for (let i = 1; i < elen; i++) Q += e[i];\n    return Q;\n}\n\nexport function vec(n) {\n    return new Float64Array(n);\n}\n","import {epsilon, splitter, resulterrbound, estimate, vec, sum} from './util.js';\n\nconst ccwerrboundA = (3 + 16 * epsilon) * epsilon;\nconst ccwerrboundB = (2 + 12 * epsilon) * epsilon;\nconst ccwerrboundC = (9 + 64 * epsilon) * epsilon * epsilon;\n\nconst B = vec(4);\nconst C1 = vec(8);\nconst C2 = vec(12);\nconst D = vec(16);\nconst u = vec(4);\n\nfunction orient2dadapt(ax, ay, bx, by, cx, cy, detsum) {\n    let acxtail, acytail, bcxtail, bcytail;\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n    const acx = ax - cx;\n    const bcx = bx - cx;\n    const acy = ay - cy;\n    const bcy = by - cy;\n\n    s1 = acx * bcy;\n    c = splitter * acx;\n    ahi = c - (c - acx);\n    alo = acx - ahi;\n    c = splitter * bcy;\n    bhi = c - (c - bcy);\n    blo = bcy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acy * bcx;\n    c = splitter * acy;\n    ahi = c - (c - acy);\n    alo = acy - ahi;\n    c = splitter * bcx;\n    bhi = c - (c - bcx);\n    blo = bcx - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    B[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    B[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    B[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    B[3] = u3;\n\n    let det = estimate(4, B);\n    let errbound = ccwerrboundB * detsum;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - acx;\n    acxtail = ax - (acx + bvirt) + (bvirt - cx);\n    bvirt = bx - bcx;\n    bcxtail = bx - (bcx + bvirt) + (bvirt - cx);\n    bvirt = ay - acy;\n    acytail = ay - (acy + bvirt) + (bvirt - cy);\n    bvirt = by - bcy;\n    bcytail = by - (bcy + bvirt) + (bvirt - cy);\n\n    if (acxtail === 0 && acytail === 0 && bcxtail === 0 && bcytail === 0) {\n        return det;\n    }\n\n    errbound = ccwerrboundC * detsum + resulterrbound * Math.abs(det);\n    det += (acx * bcytail + bcy * acxtail) - (acy * bcxtail + bcx * acytail);\n    if (det >= errbound || -det >= errbound) return det;\n\n    s1 = acxtail * bcy;\n    c = splitter * acxtail;\n    ahi = c - (c - acxtail);\n    alo = acxtail - ahi;\n    c = splitter * bcy;\n    bhi = c - (c - bcy);\n    blo = bcy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acytail * bcx;\n    c = splitter * acytail;\n    ahi = c - (c - acytail);\n    alo = acytail - ahi;\n    c = splitter * bcx;\n    bhi = c - (c - bcx);\n    blo = bcx - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const C1len = sum(4, B, 4, u, C1);\n\n    s1 = acx * bcytail;\n    c = splitter * acx;\n    ahi = c - (c - acx);\n    alo = acx - ahi;\n    c = splitter * bcytail;\n    bhi = c - (c - bcytail);\n    blo = bcytail - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acy * bcxtail;\n    c = splitter * acy;\n    ahi = c - (c - acy);\n    alo = acy - ahi;\n    c = splitter * bcxtail;\n    bhi = c - (c - bcxtail);\n    blo = bcxtail - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const C2len = sum(C1len, C1, 4, u, C2);\n\n    s1 = acxtail * bcytail;\n    c = splitter * acxtail;\n    ahi = c - (c - acxtail);\n    alo = acxtail - ahi;\n    c = splitter * bcytail;\n    bhi = c - (c - bcytail);\n    blo = bcytail - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acytail * bcxtail;\n    c = splitter * acytail;\n    ahi = c - (c - acytail);\n    alo = acytail - ahi;\n    c = splitter * bcxtail;\n    bhi = c - (c - bcxtail);\n    blo = bcxtail - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const Dlen = sum(C2len, C2, 4, u, D);\n\n    return D[Dlen - 1];\n}\n\nexport function orient2d(ax, ay, bx, by, cx, cy) {\n    const detleft = (ay - cy) * (bx - cx);\n    const detright = (ax - cx) * (by - cy);\n    const det = detleft - detright;\n\n    if (detleft === 0 || detright === 0 || (detleft > 0) !== (detright > 0)) return det;\n\n    const detsum = Math.abs(detleft + detright);\n    if (Math.abs(det) >= ccwerrboundA * detsum) return det;\n\n    return -orient2dadapt(ax, ay, bx, by, cx, cy, detsum);\n}\n\nexport function orient2dfast(ax, ay, bx, by, cx, cy) {\n    return (ay - cy) * (bx - cx) - (ax - cx) * (by - cy);\n}\n","\nconst EPSILON = Math.pow(2, -52);\nconst EDGE_STACK = new Uint32Array(512);\n\nimport {orient2d} from 'robust-predicates';\n\nexport default class Delaunator {\n\n    static from(points, getX = defaultGetX, getY = defaultGetY) {\n        const n = points.length;\n        const coords = new Float64Array(n * 2);\n\n        for (let i = 0; i < n; i++) {\n            const p = points[i];\n            coords[2 * i] = getX(p);\n            coords[2 * i + 1] = getY(p);\n        }\n\n        return new Delaunator(coords);\n    }\n\n    constructor(coords) {\n        const n = coords.length >> 1;\n        if (n > 0 && typeof coords[0] !== 'number') throw new Error('Expected coords to contain numbers.');\n\n        this.coords = coords;\n\n        // arrays that will store the triangulation graph\n        const maxTriangles = Math.max(2 * n - 5, 0);\n        this._triangles = new Uint32Array(maxTriangles * 3);\n        this._halfedges = new Int32Array(maxTriangles * 3);\n\n        // temporary arrays for tracking the edges of the advancing convex hull\n        this._hashSize = Math.ceil(Math.sqrt(n));\n        this._hullPrev = new Uint32Array(n); // edge to prev edge\n        this._hullNext = new Uint32Array(n); // edge to next edge\n        this._hullTri = new Uint32Array(n); // edge to adjacent triangle\n        this._hullHash = new Int32Array(this._hashSize).fill(-1); // angular edge hash\n\n        // temporary arrays for sorting points\n        this._ids = new Uint32Array(n);\n        this._dists = new Float64Array(n);\n\n        this.update();\n    }\n\n    update() {\n        const {coords, _hullPrev: hullPrev, _hullNext: hullNext, _hullTri: hullTri, _hullHash: hullHash} =  this;\n        const n = coords.length >> 1;\n\n        // populate an array of point indices; calculate input data bbox\n        let minX = Infinity;\n        let minY = Infinity;\n        let maxX = -Infinity;\n        let maxY = -Infinity;\n\n        for (let i = 0; i < n; i++) {\n            const x = coords[2 * i];\n            const y = coords[2 * i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n            this._ids[i] = i;\n        }\n        const cx = (minX + maxX) / 2;\n        const cy = (minY + maxY) / 2;\n\n        let minDist = Infinity;\n        let i0, i1, i2;\n\n        // pick a seed point close to the center\n        for (let i = 0; i < n; i++) {\n            const d = dist(cx, cy, coords[2 * i], coords[2 * i + 1]);\n            if (d < minDist) {\n                i0 = i;\n                minDist = d;\n            }\n        }\n        const i0x = coords[2 * i0];\n        const i0y = coords[2 * i0 + 1];\n\n        minDist = Infinity;\n\n        // find the point closest to the seed\n        for (let i = 0; i < n; i++) {\n            if (i === i0) continue;\n            const d = dist(i0x, i0y, coords[2 * i], coords[2 * i + 1]);\n            if (d < minDist && d > 0) {\n                i1 = i;\n                minDist = d;\n            }\n        }\n        let i1x = coords[2 * i1];\n        let i1y = coords[2 * i1 + 1];\n\n        let minRadius = Infinity;\n\n        // find the third point which forms the smallest circumcircle with the first two\n        for (let i = 0; i < n; i++) {\n            if (i === i0 || i === i1) continue;\n            const r = circumradius(i0x, i0y, i1x, i1y, coords[2 * i], coords[2 * i + 1]);\n            if (r < minRadius) {\n                i2 = i;\n                minRadius = r;\n            }\n        }\n        let i2x = coords[2 * i2];\n        let i2y = coords[2 * i2 + 1];\n\n        if (minRadius === Infinity) {\n            // order collinear points by dx (or dy if all x are identical)\n            // and return the list as a hull\n            for (let i = 0; i < n; i++) {\n                this._dists[i] = (coords[2 * i] - coords[0]) || (coords[2 * i + 1] - coords[1]);\n            }\n            quicksort(this._ids, this._dists, 0, n - 1);\n            const hull = new Uint32Array(n);\n            let j = 0;\n            for (let i = 0, d0 = -Infinity; i < n; i++) {\n                const id = this._ids[i];\n                if (this._dists[id] > d0) {\n                    hull[j++] = id;\n                    d0 = this._dists[id];\n                }\n            }\n            this.hull = hull.subarray(0, j);\n            this.triangles = new Uint32Array(0);\n            this.halfedges = new Uint32Array(0);\n            return;\n        }\n\n        // swap the order of the seed points for counter-clockwise orientation\n        if (orient2d(i0x, i0y, i1x, i1y, i2x, i2y) < 0) {\n            const i = i1;\n            const x = i1x;\n            const y = i1y;\n            i1 = i2;\n            i1x = i2x;\n            i1y = i2y;\n            i2 = i;\n            i2x = x;\n            i2y = y;\n        }\n\n        const center = circumcenter(i0x, i0y, i1x, i1y, i2x, i2y);\n        this._cx = center.x;\n        this._cy = center.y;\n\n        for (let i = 0; i < n; i++) {\n            this._dists[i] = dist(coords[2 * i], coords[2 * i + 1], center.x, center.y);\n        }\n\n        // sort the points by distance from the seed triangle circumcenter\n        quicksort(this._ids, this._dists, 0, n - 1);\n\n        // set up the seed triangle as the starting hull\n        this._hullStart = i0;\n        let hullSize = 3;\n\n        hullNext[i0] = hullPrev[i2] = i1;\n        hullNext[i1] = hullPrev[i0] = i2;\n        hullNext[i2] = hullPrev[i1] = i0;\n\n        hullTri[i0] = 0;\n        hullTri[i1] = 1;\n        hullTri[i2] = 2;\n\n        hullHash.fill(-1);\n        hullHash[this._hashKey(i0x, i0y)] = i0;\n        hullHash[this._hashKey(i1x, i1y)] = i1;\n        hullHash[this._hashKey(i2x, i2y)] = i2;\n\n        this.trianglesLen = 0;\n        this._addTriangle(i0, i1, i2, -1, -1, -1);\n\n        for (let k = 0, xp, yp; k < this._ids.length; k++) {\n            const i = this._ids[k];\n            const x = coords[2 * i];\n            const y = coords[2 * i + 1];\n\n            // skip near-duplicate points\n            if (k > 0 && Math.abs(x - xp) <= EPSILON && Math.abs(y - yp) <= EPSILON) continue;\n            xp = x;\n            yp = y;\n\n            // skip seed triangle points\n            if (i === i0 || i === i1 || i === i2) continue;\n\n            // find a visible edge on the convex hull using edge hash\n            let start = 0;\n            for (let j = 0, key = this._hashKey(x, y); j < this._hashSize; j++) {\n                start = hullHash[(key + j) % this._hashSize];\n                if (start !== -1 && start !== hullNext[start]) break;\n            }\n\n            start = hullPrev[start];\n            let e = start, q;\n            while (q = hullNext[e], orient2d(x, y, coords[2 * e], coords[2 * e + 1], coords[2 * q], coords[2 * q + 1]) >= 0) {\n                e = q;\n                if (e === start) {\n                    e = -1;\n                    break;\n                }\n            }\n            if (e === -1) continue; // likely a near-duplicate point; skip it\n\n            // add the first triangle from the point\n            let t = this._addTriangle(e, i, hullNext[e], -1, -1, hullTri[e]);\n\n            // recursively flip triangles from the point until they satisfy the Delaunay condition\n            hullTri[i] = this._legalize(t + 2);\n            hullTri[e] = t; // keep track of boundary triangles on the hull\n            hullSize++;\n\n            // walk forward through the hull, adding more triangles and flipping recursively\n            let n = hullNext[e];\n            while (q = hullNext[n], orient2d(x, y, coords[2 * n], coords[2 * n + 1], coords[2 * q], coords[2 * q + 1]) < 0) {\n                t = this._addTriangle(n, i, q, hullTri[i], -1, hullTri[n]);\n                hullTri[i] = this._legalize(t + 2);\n                hullNext[n] = n; // mark as removed\n                hullSize--;\n                n = q;\n            }\n\n            // walk backward from the other side, adding more triangles and flipping\n            if (e === start) {\n                while (q = hullPrev[e], orient2d(x, y, coords[2 * q], coords[2 * q + 1], coords[2 * e], coords[2 * e + 1]) < 0) {\n                    t = this._addTriangle(q, i, e, -1, hullTri[e], hullTri[q]);\n                    this._legalize(t + 2);\n                    hullTri[q] = t;\n                    hullNext[e] = e; // mark as removed\n                    hullSize--;\n                    e = q;\n                }\n            }\n\n            // update the hull indices\n            this._hullStart = hullPrev[i] = e;\n            hullNext[e] = hullPrev[n] = i;\n            hullNext[i] = n;\n\n            // save the two new edges in the hash table\n            hullHash[this._hashKey(x, y)] = i;\n            hullHash[this._hashKey(coords[2 * e], coords[2 * e + 1])] = e;\n        }\n\n        this.hull = new Uint32Array(hullSize);\n        for (let i = 0, e = this._hullStart; i < hullSize; i++) {\n            this.hull[i] = e;\n            e = hullNext[e];\n        }\n\n        // trim typed triangle mesh arrays\n        this.triangles = this._triangles.subarray(0, this.trianglesLen);\n        this.halfedges = this._halfedges.subarray(0, this.trianglesLen);\n    }\n\n    _hashKey(x, y) {\n        return Math.floor(pseudoAngle(x - this._cx, y - this._cy) * this._hashSize) % this._hashSize;\n    }\n\n    _legalize(a) {\n        const {_triangles: triangles, _halfedges: halfedges, coords} = this;\n\n        let i = 0;\n        let ar = 0;\n\n        // recursion eliminated with a fixed-size stack\n        while (true) {\n            const b = halfedges[a];\n\n            /* if the pair of triangles doesn't satisfy the Delaunay condition\n             * (p1 is inside the circumcircle of [p0, pl, pr]), flip them,\n             * then do the same check/flip recursively for the new pair of triangles\n             *\n             *           pl                    pl\n             *          /||\\                  /  \\\n             *       al/ || \\bl            al/    \\a\n             *        /  ||  \\              /      \\\n             *       /  a||b  \\    flip    /___ar___\\\n             *     p0\\   ||   /p1   =>   p0\\---bl---/p1\n             *        \\  ||  /              \\      /\n             *       ar\\ || /br             b\\    /br\n             *          \\||/                  \\  /\n             *           pr                    pr\n             */\n            const a0 = a - a % 3;\n            ar = a0 + (a + 2) % 3;\n\n            if (b === -1) { // convex hull edge\n                if (i === 0) break;\n                a = EDGE_STACK[--i];\n                continue;\n            }\n\n            const b0 = b - b % 3;\n            const al = a0 + (a + 1) % 3;\n            const bl = b0 + (b + 2) % 3;\n\n            const p0 = triangles[ar];\n            const pr = triangles[a];\n            const pl = triangles[al];\n            const p1 = triangles[bl];\n\n            const illegal = inCircle(\n                coords[2 * p0], coords[2 * p0 + 1],\n                coords[2 * pr], coords[2 * pr + 1],\n                coords[2 * pl], coords[2 * pl + 1],\n                coords[2 * p1], coords[2 * p1 + 1]);\n\n            if (illegal) {\n                triangles[a] = p1;\n                triangles[b] = p0;\n\n                const hbl = halfedges[bl];\n\n                // edge swapped on the other side of the hull (rare); fix the halfedge reference\n                if (hbl === -1) {\n                    let e = this._hullStart;\n                    do {\n                        if (this._hullTri[e] === bl) {\n                            this._hullTri[e] = a;\n                            break;\n                        }\n                        e = this._hullPrev[e];\n                    } while (e !== this._hullStart);\n                }\n                this._link(a, hbl);\n                this._link(b, halfedges[ar]);\n                this._link(ar, bl);\n\n                const br = b0 + (b + 1) % 3;\n\n                // don't worry about hitting the cap: it can only happen on extremely degenerate input\n                if (i < EDGE_STACK.length) {\n                    EDGE_STACK[i++] = br;\n                }\n            } else {\n                if (i === 0) break;\n                a = EDGE_STACK[--i];\n            }\n        }\n\n        return ar;\n    }\n\n    _link(a, b) {\n        this._halfedges[a] = b;\n        if (b !== -1) this._halfedges[b] = a;\n    }\n\n    // add a new triangle given vertex indices and adjacent half-edge ids\n    _addTriangle(i0, i1, i2, a, b, c) {\n        const t = this.trianglesLen;\n\n        this._triangles[t] = i0;\n        this._triangles[t + 1] = i1;\n        this._triangles[t + 2] = i2;\n\n        this._link(t, a);\n        this._link(t + 1, b);\n        this._link(t + 2, c);\n\n        this.trianglesLen += 3;\n\n        return t;\n    }\n}\n\n// monotonically increases with real angle, but doesn't need expensive trigonometry\nfunction pseudoAngle(dx, dy) {\n    const p = dx / (Math.abs(dx) + Math.abs(dy));\n    return (dy > 0 ? 3 - p : 1 + p) / 4; // [0..1]\n}\n\nfunction dist(ax, ay, bx, by) {\n    const dx = ax - bx;\n    const dy = ay - by;\n    return dx * dx + dy * dy;\n}\n\nfunction inCircle(ax, ay, bx, by, cx, cy, px, py) {\n    const dx = ax - px;\n    const dy = ay - py;\n    const ex = bx - px;\n    const ey = by - py;\n    const fx = cx - px;\n    const fy = cy - py;\n\n    const ap = dx * dx + dy * dy;\n    const bp = ex * ex + ey * ey;\n    const cp = fx * fx + fy * fy;\n\n    return dx * (ey * cp - bp * fy) -\n           dy * (ex * cp - bp * fx) +\n           ap * (ex * fy - ey * fx) < 0;\n}\n\nfunction circumradius(ax, ay, bx, by, cx, cy) {\n    const dx = bx - ax;\n    const dy = by - ay;\n    const ex = cx - ax;\n    const ey = cy - ay;\n\n    const bl = dx * dx + dy * dy;\n    const cl = ex * ex + ey * ey;\n    const d = 0.5 / (dx * ey - dy * ex);\n\n    const x = (ey * bl - dy * cl) * d;\n    const y = (dx * cl - ex * bl) * d;\n\n    return x * x + y * y;\n}\n\nfunction circumcenter(ax, ay, bx, by, cx, cy) {\n    const dx = bx - ax;\n    const dy = by - ay;\n    const ex = cx - ax;\n    const ey = cy - ay;\n\n    const bl = dx * dx + dy * dy;\n    const cl = ex * ex + ey * ey;\n    const d = 0.5 / (dx * ey - dy * ex);\n\n    const x = ax + (ey * bl - dy * cl) * d;\n    const y = ay + (dx * cl - ex * bl) * d;\n\n    return {x, y};\n}\n\nfunction quicksort(ids, dists, left, right) {\n    if (right - left <= 20) {\n        for (let i = left + 1; i <= right; i++) {\n            const temp = ids[i];\n            const tempDist = dists[temp];\n            let j = i - 1;\n            while (j >= left && dists[ids[j]] > tempDist) ids[j + 1] = ids[j--];\n            ids[j + 1] = temp;\n        }\n    } else {\n        const median = (left + right) >> 1;\n        let i = left + 1;\n        let j = right;\n        swap(ids, median, i);\n        if (dists[ids[left]] > dists[ids[right]]) swap(ids, left, right);\n        if (dists[ids[i]] > dists[ids[right]]) swap(ids, i, right);\n        if (dists[ids[left]] > dists[ids[i]]) swap(ids, left, i);\n\n        const temp = ids[i];\n        const tempDist = dists[temp];\n        while (true) {\n            do i++; while (dists[ids[i]] < tempDist);\n            do j--; while (dists[ids[j]] > tempDist);\n            if (j < i) break;\n            swap(ids, i, j);\n        }\n        ids[left + 1] = ids[j];\n        ids[j] = temp;\n\n        if (right - i + 1 >= j - left) {\n            quicksort(ids, dists, i, right);\n            quicksort(ids, dists, left, j - 1);\n        } else {\n            quicksort(ids, dists, left, j - 1);\n            quicksort(ids, dists, i, right);\n        }\n    }\n}\n\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultGetX(p) {\n    return p[0];\n}\nfunction defaultGetY(p) {\n    return p[1];\n}\n","const epsilon = 1e-6;\n\nexport default class Path {\n  constructor() {\n    this._x0 = this._y0 = // start of current subpath\n    this._x1 = this._y1 = null; // end of current subpath\n    this._ = \"\";\n  }\n  moveTo(x, y) {\n    this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;\n  }\n  closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  }\n  lineTo(x, y) {\n    this._ += `L${this._x1 = +x},${this._y1 = +y}`;\n  }\n  arc(x, y, r) {\n    x = +x, y = +y, r = +r;\n    const x0 = x + r;\n    const y0 = y;\n    if (r < 0) throw new Error(\"negative radius\");\n    if (this._x1 === null) this._ += `M${x0},${y0}`;\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) this._ += \"L\" + x0 + \",\" + y0;\n    if (!r) return;\n    this._ += `A${r},${r},0,1,1,${x - r},${y}A${r},${r},0,1,1,${this._x1 = x0},${this._y1 = y0}`;\n  }\n  rect(x, y, w, h) {\n    this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${+w}v${+h}h${-w}Z`;\n  }\n  value() {\n    return this._ || null;\n  }\n}\n","export default class Polygon {\n  constructor() {\n    this._ = [];\n  }\n  moveTo(x, y) {\n    this._.push([x, y]);\n  }\n  closePath() {\n    this._.push(this._[0].slice());\n  }\n  lineTo(x, y) {\n    this._.push([x, y]);\n  }\n  value() {\n    return this._.length ? this._ : null;\n  }\n}\n","import Path from \"./path.js\";\nimport Polygon from \"./polygon.js\";\n\nexport default class Voronoi {\n  constructor(delaunay, [xmin, ymin, xmax, ymax] = [0, 0, 960, 500]) {\n    if (!((xmax = +xmax) >= (xmin = +xmin)) || !((ymax = +ymax) >= (ymin = +ymin))) throw new Error(\"invalid bounds\");\n    this.delaunay = delaunay;\n    this._circumcenters = new Float64Array(delaunay.points.length * 2);\n    this.vectors = new Float64Array(delaunay.points.length * 2);\n    this.xmax = xmax, this.xmin = xmin;\n    this.ymax = ymax, this.ymin = ymin;\n    this._init();\n  }\n  update() {\n    this.delaunay.update();\n    this._init();\n    return this;\n  }\n  _init() {\n    const {delaunay: {points, hull, triangles}, vectors} = this;\n\n    // Compute circumcenters.\n    const circumcenters = this.circumcenters = this._circumcenters.subarray(0, triangles.length / 3 * 2);\n    for (let i = 0, j = 0, n = triangles.length, x, y; i < n; i += 3, j += 2) {\n      const t1 = triangles[i] * 2;\n      const t2 = triangles[i + 1] * 2;\n      const t3 = triangles[i + 2] * 2;\n      const x1 = points[t1];\n      const y1 = points[t1 + 1];\n      const x2 = points[t2];\n      const y2 = points[t2 + 1];\n      const x3 = points[t3];\n      const y3 = points[t3 + 1];\n\n      const dx = x2 - x1;\n      const dy = y2 - y1;\n      const ex = x3 - x1;\n      const ey = y3 - y1;\n      const ab = (dx * ey - dy * ex) * 2;\n\n      if (Math.abs(ab) < 1e-9) {\n        // degenerate case (collinear diagram)\n        // almost equal points (degenerate triangle)\n        // the circumcenter is at the infinity, in a\n        // direction that is:\n        // 1. orthogonal to the halfedge.\n        let a = 1e9;\n        // 2. points away from the center; since the list of triangles starts\n        // in the center, the first point of the first triangle\n        // will be our reference\n        const r = triangles[0] * 2;\n        a *= Math.sign((points[r] - x1) * ey - (points[r + 1] - y1) * ex);\n        x = (x1 + x3) / 2 - a * ey;\n        y = (y1 + y3) / 2 + a * ex;\n      } else {\n        const d = 1 / ab;\n        const bl = dx * dx + dy * dy;\n        const cl = ex * ex + ey * ey;\n        x = x1 + (ey * bl - dy * cl) * d;\n        y = y1 + (dx * cl - ex * bl) * d;\n      }\n      circumcenters[j] = x;\n      circumcenters[j + 1] = y;\n    }\n\n    // Compute exterior cell rays.\n    let h = hull[hull.length - 1];\n    let p0, p1 = h * 4;\n    let x0, x1 = points[2 * h];\n    let y0, y1 = points[2 * h + 1];\n    vectors.fill(0);\n    for (let i = 0; i < hull.length; ++i) {\n      h = hull[i];\n      p0 = p1, x0 = x1, y0 = y1;\n      p1 = h * 4, x1 = points[2 * h], y1 = points[2 * h + 1];\n      vectors[p0 + 2] = vectors[p1] = y0 - y1;\n      vectors[p0 + 3] = vectors[p1 + 1] = x1 - x0;\n    }\n  }\n  render(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {delaunay: {halfedges, inedges, hull}, circumcenters, vectors} = this;\n    if (hull.length <= 1) return null;\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\n      const j = halfedges[i];\n      if (j < i) continue;\n      const ti = Math.floor(i / 3) * 2;\n      const tj = Math.floor(j / 3) * 2;\n      const xi = circumcenters[ti];\n      const yi = circumcenters[ti + 1];\n      const xj = circumcenters[tj];\n      const yj = circumcenters[tj + 1];\n      this._renderSegment(xi, yi, xj, yj, context);\n    }\n    let h0, h1 = hull[hull.length - 1];\n    for (let i = 0; i < hull.length; ++i) {\n      h0 = h1, h1 = hull[i];\n      const t = Math.floor(inedges[h1] / 3) * 2;\n      const x = circumcenters[t];\n      const y = circumcenters[t + 1];\n      const v = h0 * 4;\n      const p = this._project(x, y, vectors[v + 2], vectors[v + 3]);\n      if (p) this._renderSegment(x, y, p[0], p[1], context);\n    }\n    return buffer && buffer.value();\n  }\n  renderBounds(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    context.rect(this.xmin, this.ymin, this.xmax - this.xmin, this.ymax - this.ymin);\n    return buffer && buffer.value();\n  }\n  renderCell(i, context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const points = this._clip(i);\n    if (points === null || !points.length) return;\n    context.moveTo(points[0], points[1]);\n    let n = points.length;\n    while (points[0] === points[n-2] && points[1] === points[n-1] && n > 1) n -= 2;\n    for (let i = 2; i < n; i += 2) {\n      if (points[i] !== points[i-2] || points[i+1] !== points[i-1])\n        context.lineTo(points[i], points[i + 1]);\n    }\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  *cellPolygons() {\n    const {delaunay: {points}} = this;\n    for (let i = 0, n = points.length / 2; i < n; ++i) {\n      const cell = this.cellPolygon(i);\n      if (cell) cell.index = i, yield cell;\n    }\n  }\n  cellPolygon(i) {\n    const polygon = new Polygon;\n    this.renderCell(i, polygon);\n    return polygon.value();\n  }\n  _renderSegment(x0, y0, x1, y1, context) {\n    let S;\n    const c0 = this._regioncode(x0, y0);\n    const c1 = this._regioncode(x1, y1);\n    if (c0 === 0 && c1 === 0) {\n      context.moveTo(x0, y0);\n      context.lineTo(x1, y1);\n    } else if (S = this._clipSegment(x0, y0, x1, y1, c0, c1)) {\n      context.moveTo(S[0], S[1]);\n      context.lineTo(S[2], S[3]);\n    }\n  }\n  contains(i, x, y) {\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return false;\n    return this.delaunay._step(i, x, y) === i;\n  }\n  *neighbors(i) {\n    const ci = this._clip(i);\n    if (ci) for (const j of this.delaunay.neighbors(i)) {\n      const cj = this._clip(j);\n      // find the common edge\n      if (cj) loop: for (let ai = 0, li = ci.length; ai < li; ai += 2) {\n        for (let aj = 0, lj = cj.length; aj < lj; aj += 2) {\n          if (ci[ai] == cj[aj]\n          && ci[ai + 1] == cj[aj + 1]\n          && ci[(ai + 2) % li] == cj[(aj + lj - 2) % lj]\n          && ci[(ai + 3) % li] == cj[(aj + lj - 1) % lj]\n          ) {\n            yield j;\n            break loop;\n          }\n        }\n      }\n    }\n  }\n  _cell(i) {\n    const {circumcenters, delaunay: {inedges, halfedges, triangles}} = this;\n    const e0 = inedges[i];\n    if (e0 === -1) return null; // coincident point\n    const points = [];\n    let e = e0;\n    do {\n      const t = Math.floor(e / 3);\n      points.push(circumcenters[t * 2], circumcenters[t * 2 + 1]);\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n      e = halfedges[e];\n    } while (e !== e0 && e !== -1);\n    return points;\n  }\n  _clip(i) {\n    // degenerate case (1 valid point: return the box)\n    if (i === 0 && this.delaunay.hull.length === 1) {\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n    }\n    const points = this._cell(i);\n    if (points === null) return null;\n    const {vectors: V} = this;\n    const v = i * 4;\n    return V[v] || V[v + 1]\n        ? this._clipInfinite(i, points, V[v], V[v + 1], V[v + 2], V[v + 3])\n        : this._clipFinite(i, points);\n  }\n  _clipFinite(i, points) {\n    const n = points.length;\n    let P = null;\n    let x0, y0, x1 = points[n - 2], y1 = points[n - 1];\n    let c0, c1 = this._regioncode(x1, y1);\n    let e0, e1 = 0;\n    for (let j = 0; j < n; j += 2) {\n      x0 = x1, y0 = y1, x1 = points[j], y1 = points[j + 1];\n      c0 = c1, c1 = this._regioncode(x1, y1);\n      if (c0 === 0 && c1 === 0) {\n        e0 = e1, e1 = 0;\n        if (P) P.push(x1, y1);\n        else P = [x1, y1];\n      } else {\n        let S, sx0, sy0, sx1, sy1;\n        if (c0 === 0) {\n          if ((S = this._clipSegment(x0, y0, x1, y1, c0, c1)) === null) continue;\n          [sx0, sy0, sx1, sy1] = S;\n        } else {\n          if ((S = this._clipSegment(x1, y1, x0, y0, c1, c0)) === null) continue;\n          [sx1, sy1, sx0, sy0] = S;\n          e0 = e1, e1 = this._edgecode(sx0, sy0);\n          if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n          if (P) P.push(sx0, sy0);\n          else P = [sx0, sy0];\n        }\n        e0 = e1, e1 = this._edgecode(sx1, sy1);\n        if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n        if (P) P.push(sx1, sy1);\n        else P = [sx1, sy1];\n      }\n    }\n    if (P) {\n      e0 = e1, e1 = this._edgecode(P[0], P[1]);\n      if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n    }\n    return P;\n  }\n  _clipSegment(x0, y0, x1, y1, c0, c1) {\n    while (true) {\n      if (c0 === 0 && c1 === 0) return [x0, y0, x1, y1];\n      if (c0 & c1) return null;\n      let x, y, c = c0 || c1;\n      if (c & 0b1000) x = x0 + (x1 - x0) * (this.ymax - y0) / (y1 - y0), y = this.ymax;\n      else if (c & 0b0100) x = x0 + (x1 - x0) * (this.ymin - y0) / (y1 - y0), y = this.ymin;\n      else if (c & 0b0010) y = y0 + (y1 - y0) * (this.xmax - x0) / (x1 - x0), x = this.xmax;\n      else y = y0 + (y1 - y0) * (this.xmin - x0) / (x1 - x0), x = this.xmin;\n      if (c0) x0 = x, y0 = y, c0 = this._regioncode(x0, y0);\n      else x1 = x, y1 = y, c1 = this._regioncode(x1, y1);\n    }\n  }\n  _clipInfinite(i, points, vx0, vy0, vxn, vyn) {\n    let P = Array.from(points), p;\n    if (p = this._project(P[0], P[1], vx0, vy0)) P.unshift(p[0], p[1]);\n    if (p = this._project(P[P.length - 2], P[P.length - 1], vxn, vyn)) P.push(p[0], p[1]);\n    if (P = this._clipFinite(i, P)) {\n      for (let j = 0, n = P.length, c0, c1 = this._edgecode(P[n - 2], P[n - 1]); j < n; j += 2) {\n        c0 = c1, c1 = this._edgecode(P[j], P[j + 1]);\n        if (c0 && c1) j = this._edge(i, c0, c1, P, j), n = P.length;\n      }\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n      P = [this.xmin, this.ymin, this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax];\n    }\n    return P;\n  }\n  _edge(i, e0, e1, P, j) {\n    while (e0 !== e1) {\n      let x, y;\n      switch (e0) {\n        case 0b0101: e0 = 0b0100; continue; // top-left\n        case 0b0100: e0 = 0b0110, x = this.xmax, y = this.ymin; break; // top\n        case 0b0110: e0 = 0b0010; continue; // top-right\n        case 0b0010: e0 = 0b1010, x = this.xmax, y = this.ymax; break; // right\n        case 0b1010: e0 = 0b1000; continue; // bottom-right\n        case 0b1000: e0 = 0b1001, x = this.xmin, y = this.ymax; break; // bottom\n        case 0b1001: e0 = 0b0001; continue; // bottom-left\n        case 0b0001: e0 = 0b0101, x = this.xmin, y = this.ymin; break; // left\n      }\n      // Note: this implicitly checks for out of bounds: if P[j] or P[j+1] are\n      // undefined, the conditional statement will be executed.\n      if ((P[j] !== x || P[j + 1] !== y) && this.contains(i, x, y)) {\n        P.splice(j, 0, x, y), j += 2;\n      }\n    }\n    if (P.length > 4) {\n      for (let i = 0; i < P.length; i+= 2) {\n        const j = (i + 2) % P.length, k = (i + 4) % P.length;\n        if (P[i] === P[j] && P[j] === P[k]\n        || P[i + 1] === P[j + 1] && P[j + 1] === P[k + 1])\n          P.splice(j, 2), i -= 2;\n      }\n    }\n    return j;\n  }\n  _project(x0, y0, vx, vy) {\n    let t = Infinity, c, x, y;\n    if (vy < 0) { // top\n      if (y0 <= this.ymin) return null;\n      if ((c = (this.ymin - y0) / vy) < t) y = this.ymin, x = x0 + (t = c) * vx;\n    } else if (vy > 0) { // bottom\n      if (y0 >= this.ymax) return null;\n      if ((c = (this.ymax - y0) / vy) < t) y = this.ymax, x = x0 + (t = c) * vx;\n    }\n    if (vx > 0) { // right\n      if (x0 >= this.xmax) return null;\n      if ((c = (this.xmax - x0) / vx) < t) x = this.xmax, y = y0 + (t = c) * vy;\n    } else if (vx < 0) { // left\n      if (x0 <= this.xmin) return null;\n      if ((c = (this.xmin - x0) / vx) < t) x = this.xmin, y = y0 + (t = c) * vy;\n    }\n    return [x, y];\n  }\n  _edgecode(x, y) {\n    return (x === this.xmin ? 0b0001\n        : x === this.xmax ? 0b0010 : 0b0000)\n        | (y === this.ymin ? 0b0100\n        : y === this.ymax ? 0b1000 : 0b0000);\n  }\n  _regioncode(x, y) {\n    return (x < this.xmin ? 0b0001\n        : x > this.xmax ? 0b0010 : 0b0000)\n        | (y < this.ymin ? 0b0100\n        : y > this.ymax ? 0b1000 : 0b0000);\n  }\n}\n","import Delaunator from \"delaunator\";\nimport Path from \"./path.js\";\nimport Polygon from \"./polygon.js\";\nimport Voronoi from \"./voronoi.js\";\n\nconst tau = 2 * Math.PI, pow = Math.pow;\n\nfunction pointX(p) {\n  return p[0];\n}\n\nfunction pointY(p) {\n  return p[1];\n}\n\n// A triangulation is collinear if all its triangles have a non-null area\nfunction collinear(d) {\n  const {triangles, coords} = d;\n  for (let i = 0; i < triangles.length; i += 3) {\n    const a = 2 * triangles[i],\n          b = 2 * triangles[i + 1],\n          c = 2 * triangles[i + 2],\n          cross = (coords[c] - coords[a]) * (coords[b + 1] - coords[a + 1])\n                - (coords[b] - coords[a]) * (coords[c + 1] - coords[a + 1]);\n    if (cross > 1e-10) return false;\n  }\n  return true;\n}\n\nfunction jitter(x, y, r) {\n  return [x + Math.sin(x + y) * r, y + Math.cos(x - y) * r];\n}\n\nexport default class Delaunay {\n  static from(points, fx = pointX, fy = pointY, that) {\n    return new Delaunay(\"length\" in points\n        ? flatArray(points, fx, fy, that)\n        : Float64Array.from(flatIterable(points, fx, fy, that)));\n  }\n  constructor(points) {\n    this._delaunator = new Delaunator(points);\n    this.inedges = new Int32Array(points.length / 2);\n    this._hullIndex = new Int32Array(points.length / 2);\n    this.points = this._delaunator.coords;\n    this._init();\n  }\n  update() {\n    this._delaunator.update();\n    this._init();\n    return this;\n  }\n  _init() {\n    const d = this._delaunator, points = this.points;\n\n    // check for collinear\n    if (d.hull && d.hull.length > 2 && collinear(d)) {\n      this.collinear = Int32Array.from({length: points.length/2}, (_,i) => i)\n        .sort((i, j) => points[2 * i] - points[2 * j] || points[2 * i + 1] - points[2 * j + 1]); // for exact neighbors\n      const e = this.collinear[0], f = this.collinear[this.collinear.length - 1],\n        bounds = [ points[2 * e], points[2 * e + 1], points[2 * f], points[2 * f + 1] ],\n        r = 1e-8 * Math.hypot(bounds[3] - bounds[1], bounds[2] - bounds[0]);\n      for (let i = 0, n = points.length / 2; i < n; ++i) {\n        const p = jitter(points[2 * i], points[2 * i + 1], r);\n        points[2 * i] = p[0];\n        points[2 * i + 1] = p[1];\n      }\n      this._delaunator = new Delaunator(points);\n    } else {\n      delete this.collinear;\n    }\n\n    const halfedges = this.halfedges = this._delaunator.halfedges;\n    const hull = this.hull = this._delaunator.hull;\n    const triangles = this.triangles = this._delaunator.triangles;\n    const inedges = this.inedges.fill(-1);\n    const hullIndex = this._hullIndex.fill(-1);\n\n    // Compute an index from each point to an (arbitrary) incoming halfedge\n    // Used to give the first neighbor of each point; for this reason,\n    // on the hull we give priority to exterior halfedges\n    for (let e = 0, n = halfedges.length; e < n; ++e) {\n      const p = triangles[e % 3 === 2 ? e - 2 : e + 1];\n      if (halfedges[e] === -1 || inedges[p] === -1) inedges[p] = e;\n    }\n    for (let i = 0, n = hull.length; i < n; ++i) {\n      hullIndex[hull[i]] = i;\n    }\n\n    // degenerate case: 1 or 2 (distinct) points\n    if (hull.length <= 2 && hull.length > 0) {\n      this.triangles = new Int32Array(3).fill(-1);\n      this.halfedges = new Int32Array(3).fill(-1);\n      this.triangles[0] = hull[0];\n      inedges[hull[0]] = 1;\n      if (hull.length === 2) {\n        inedges[hull[1]] = 0;\n        this.triangles[1] = hull[1];\n        this.triangles[2] = hull[1];\n      }\n    }\n  }\n  voronoi(bounds) {\n    return new Voronoi(this, bounds);\n  }\n  *neighbors(i) {\n    const {inedges, hull, _hullIndex, halfedges, triangles, collinear} = this;\n\n    // degenerate case with several collinear points\n    if (collinear) {\n      const l = collinear.indexOf(i);\n      if (l > 0) yield collinear[l - 1];\n      if (l < collinear.length - 1) yield collinear[l + 1];\n      return;\n    }\n\n    const e0 = inedges[i];\n    if (e0 === -1) return; // coincident point\n    let e = e0, p0 = -1;\n    do {\n      yield p0 = triangles[e];\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) return; // bad triangulation\n      e = halfedges[e];\n      if (e === -1) {\n        const p = hull[(_hullIndex[i] + 1) % hull.length];\n        if (p !== p0) yield p;\n        return;\n      }\n    } while (e !== e0);\n  }\n  find(x, y, i = 0) {\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return -1;\n    const i0 = i;\n    let c;\n    while ((c = this._step(i, x, y)) >= 0 && c !== i && c !== i0) i = c;\n    return c;\n  }\n  _step(i, x, y) {\n    const {inedges, hull, _hullIndex, halfedges, triangles, points} = this;\n    if (inedges[i] === -1 || !points.length) return (i + 1) % (points.length >> 1);\n    let c = i;\n    let dc = pow(x - points[i * 2], 2) + pow(y - points[i * 2 + 1], 2);\n    const e0 = inedges[i];\n    let e = e0;\n    do {\n      let t = triangles[e];\n      const dt = pow(x - points[t * 2], 2) + pow(y - points[t * 2 + 1], 2);\n      if (dt < dc) dc = dt, c = t;\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n      e = halfedges[e];\n      if (e === -1) {\n        e = hull[(_hullIndex[i] + 1) % hull.length];\n        if (e !== t) {\n          if (pow(x - points[e * 2], 2) + pow(y - points[e * 2 + 1], 2) < dc) return e;\n        }\n        break;\n      }\n    } while (e !== e0);\n    return c;\n  }\n  render(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points, halfedges, triangles} = this;\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\n      const j = halfedges[i];\n      if (j < i) continue;\n      const ti = triangles[i] * 2;\n      const tj = triangles[j] * 2;\n      context.moveTo(points[ti], points[ti + 1]);\n      context.lineTo(points[tj], points[tj + 1]);\n    }\n    this.renderHull(context);\n    return buffer && buffer.value();\n  }\n  renderPoints(context, r) {\n    if (r === undefined && (!context || typeof context.moveTo !== \"function\")) r = context, context = null;\n    r = r == undefined ? 2 : +r;\n    const buffer = context == null ? context = new Path : undefined;\n    const {points} = this;\n    for (let i = 0, n = points.length; i < n; i += 2) {\n      const x = points[i], y = points[i + 1];\n      context.moveTo(x + r, y);\n      context.arc(x, y, r, 0, tau);\n    }\n    return buffer && buffer.value();\n  }\n  renderHull(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {hull, points} = this;\n    const h = hull[0] * 2, n = hull.length;\n    context.moveTo(points[h], points[h + 1]);\n    for (let i = 1; i < n; ++i) {\n      const h = 2 * hull[i];\n      context.lineTo(points[h], points[h + 1]);\n    }\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  hullPolygon() {\n    const polygon = new Polygon;\n    this.renderHull(polygon);\n    return polygon.value();\n  }\n  renderTriangle(i, context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points, triangles} = this;\n    const t0 = triangles[i *= 3] * 2;\n    const t1 = triangles[i + 1] * 2;\n    const t2 = triangles[i + 2] * 2;\n    context.moveTo(points[t0], points[t0 + 1]);\n    context.lineTo(points[t1], points[t1 + 1]);\n    context.lineTo(points[t2], points[t2 + 1]);\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  *trianglePolygons() {\n    const {triangles} = this;\n    for (let i = 0, n = triangles.length / 3; i < n; ++i) {\n      yield this.trianglePolygon(i);\n    }\n  }\n  trianglePolygon(i) {\n    const polygon = new Polygon;\n    this.renderTriangle(i, polygon);\n    return polygon.value();\n  }\n}\n\nfunction flatArray(points, fx, fy, that) {\n  const n = points.length;\n  const array = new Float64Array(n * 2);\n  for (let i = 0; i < n; ++i) {\n    const p = points[i];\n    array[i * 2] = fx.call(that, p, i, points);\n    array[i * 2 + 1] = fy.call(that, p, i, points);\n  }\n  return array;\n}\n\nfunction* flatIterable(points, fx, fy, that) {\n  let i = 0;\n  for (const p of points) {\n    yield fx.call(that, p, i, points);\n    yield fy.call(that, p, i, points);\n    ++i;\n  }\n}\n","import {Transform} from 'vega-dataflow';\nimport {inherits} from 'vega-util';\nimport {Delaunay} from 'd3-delaunay';\n\nexport default function Voronoi(params) {\n  Transform.call(this, null, params);\n}\n\nVoronoi.Definition = {\n  'type': 'Voronoi',\n  'metadata': {'modifies': true},\n  'params': [\n    { 'name': 'x', 'type': 'field', 'required': true },\n    { 'name': 'y', 'type': 'field', 'required': true },\n    { 'name': 'size', 'type': 'number', 'array': true, 'length': 2 },\n    { 'name': 'extent', 'type': 'array', 'array': true, 'length': 2,\n      'default': [[-1e5, -1e5], [1e5, 1e5]],\n      'content': {'type': 'number', 'array': true, 'length': 2} },\n    { 'name': 'as', 'type': 'string', 'default': 'path' }\n  ]\n};\n\nconst defaultExtent = [-1e5, -1e5, 1e5, 1e5];\n\ninherits(Voronoi, Transform, {\n  transform(_, pulse) {\n    const as = _.as || 'path',\n          data = pulse.source;\n\n    // nothing to do if no data\n    if (!data || !data.length) return pulse;\n\n    // configure and construct voronoi diagram\n    let s = _.size;\n    s = s ? [0, 0, s[0], s[1]]\n      : (s = _.extent) ? [s[0][0], s[0][1], s[1][0], s[1][1]]\n      : defaultExtent;\n\n    const voronoi = this.value = Delaunay.from(data, _.x, _.y).voronoi(s);\n\n    // map polygons to paths\n    for (let i=0, n=data.length; i<n; ++i) {\n      const polygon = voronoi.cellPolygon(i);\n      data[i][as] = polygon ? toPathString(polygon) : null;\n    }\n\n    return pulse.reflow(_.modified()).modifies(as);\n  }\n});\n\n// suppress duplicated end point vertices\nfunction toPathString(p) {\n  const x = p[0][0],\n        y = p[0][1];\n\n  let n = p.length - 1;\n  for (; p[n][0] === x && p[n][1] === y; --n);\n\n  return 'M' + p.slice(0, n + 1).join('L') + 'Z';\n}\n"],"names":["splitter","sum","elen","e","flen","f","h","Q","Qnew","hh","bvirt","enow","fnow","eindex","findex","hindex","vec","n","Float64Array","B","C1","C2","D","u","orient2d","ax","ay","bx","by","cx","cy","detleft","detright","det","detsum","Math","abs","acxtail","acytail","bcxtail","bcytail","c","ahi","alo","bhi","blo","_i","_j","_0","s1","s0","t1","t0","u3","acx","bcx","acy","bcy","i","estimate","errbound","C1len","C2len","Dlen","orient2dadapt","EPSILON","pow","EDGE_STACK","Uint32Array","Delaunator","from","points","getX","defaultGetX","getY","defaultGetY","length","coords","p","constructor","Error","this","maxTriangles","max","_triangles","_halfedges","Int32Array","_hashSize","ceil","sqrt","_hullPrev","_hullNext","_hullTri","_hullHash","fill","_ids","_dists","update","hullPrev","hullNext","hullTri","hullHash","minX","Infinity","minY","maxX","maxY","x","y","minDist","i0","i1","i2","d","dist","i0x","i0y","i1x","i1y","minRadius","r","circumradius","i2x","i2y","quicksort","hull","j","d0","id","subarray","triangles","halfedges","center","dx","dy","ex","ey","bl","cl","circumcenter","_cx","_cy","_hullStart","hullSize","_hashKey","trianglesLen","_addTriangle","xp","yp","k","start","key","q","t","_legalize","floor","pseudoAngle","a","ar","b","a0","b0","al","p0","pr","pl","p1","inCircle","hbl","_link","br","px","py","fx","fy","bp","cp","ids","dists","left","right","temp","tempDist","swap","arr","tmp","epsilon","Path","_x0","_y0","_x1","_y1","_","moveTo","concat","closePath","lineTo","arc","x0","y0","rect","w","value","Polygon","push","slice","Voronoi","delaunay","xmin","ymin","xmax","ymax","arguments","undefined","_circumcenters","vectors","_init","circumcenters","t2","t3","x1","y1","x2","y2","x3","y3","ab","sign","render","context","buffer","inedges","ti","tj","xi","yi","xj","yj","_renderSegment","h0","h1","v","_project","renderBounds","renderCell","_clip","cellPolygons","cell","cellPolygon","index","polygon","S","c0","_regioncode","c1","_clipSegment","contains","_step","neighbors","ci","cj","loop","ai","li","aj","lj","_cell","e0","V","_clipInfinite","_clipFinite","P","e1","sx0","sy0","sx1","sy1","_edgecode","_edge","vx0","vy0","vxn","vyn","Array","unshift","splice","vx","vy","tau","PI","pointX","pointY","jitter","sin","cos","Delaunay","that","array","call","flatArray","flatIterable","_delaunator","_hullIndex","collinear","sort","bounds","hypot","hullIndex","voronoi","l","indexOf","find","dc","dt","renderHull","renderPoints","hullPolygon","renderTriangle","trianglePolygons","trianglePolygon","params","Transform","Definition","type","metadata","modifies","name","required","default","content","defaultExtent","toPathString","join","inherits","transform","pulse","as","data","source","s","size","extent","reflow","modified"],"mappings":"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"}