{"version":3,"file":"vega-projection.min.js","sources":["../../../node_modules/d3-array/src/fsum.js","../../../node_modules/d3-array/src/merge.js","../../../node_modules/d3-geo/src/math.js","../../../node_modules/d3-geo/src/noop.js","../../../node_modules/d3-geo/src/stream.js","../../../node_modules/d3-geo/src/cartesian.js","../../../node_modules/d3-geo/src/compose.js","../../../node_modules/d3-geo/src/rotation.js","../../../node_modules/d3-geo/src/circle.js","../../../node_modules/d3-geo/src/clip/buffer.js","../../../node_modules/d3-geo/src/pointEqual.js","../../../node_modules/d3-geo/src/clip/rejoin.js","../../../node_modules/d3-geo/src/polygonContains.js","../../../node_modules/d3-geo/src/clip/index.js","../../../node_modules/d3-geo/src/clip/antimeridian.js","../../../node_modules/d3-geo/src/clip/circle.js","../../../node_modules/d3-geo/src/clip/rectangle.js","../../../node_modules/d3-geo/src/clip/line.js","../../../node_modules/d3-geo/src/identity.js","../../../node_modules/d3-geo/src/path/area.js","../../../node_modules/d3-geo/src/path/bounds.js","../../../node_modules/d3-geo/src/path/centroid.js","../../../node_modules/d3-geo/src/path/context.js","../../../node_modules/d3-geo/src/path/measure.js","../../../node_modules/d3-geo/src/path/string.js","../../../node_modules/d3-geo/src/path/index.js","../../../node_modules/d3-geo/src/transform.js","../../../node_modules/d3-geo/src/projection/fit.js","../../../node_modules/d3-geo/src/projection/resample.js","../../../node_modules/d3-geo/src/projection/index.js","../../../node_modules/d3-geo/src/projection/conic.js","../../../node_modules/d3-geo/src/projection/conicEqualArea.js","../../../node_modules/d3-geo/src/projection/cylindricalEqualArea.js","../../../node_modules/d3-geo/src/projection/albers.js","../../../node_modules/d3-geo/src/projection/azimuthal.js","../../../node_modules/d3-geo/src/projection/azimuthalEqualArea.js","../../../node_modules/d3-geo/src/projection/azimuthalEquidistant.js","../../../node_modules/d3-geo/src/projection/mercator.js","../../../node_modules/d3-geo/src/projection/conicConformal.js","../../../node_modules/d3-geo/src/projection/equirectangular.js","../../../node_modules/d3-geo/src/projection/conicEquidistant.js","../../../node_modules/d3-geo/src/projection/equalEarth.js","../../../node_modules/d3-geo/src/projection/gnomonic.js","../../../node_modules/d3-geo/src/projection/naturalEarth1.js","../../../node_modules/d3-geo/src/projection/orthographic.js","../../../node_modules/d3-geo/src/projection/stereographic.js","../../../node_modules/d3-geo/src/projection/transverseMercator.js","../../../node_modules/d3-geo-projection/src/math.js","../../../node_modules/d3-geo-projection/src/mollweide.js","../src/projections.js","../../../node_modules/d3-geo/src/projection/albersUsa.js","../../../node_modules/d3-geo/src/projection/identity.js"],"sourcesContent":["// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423\nexport class Adder {\n  constructor() {\n    this._partials = new Float64Array(32);\n    this._n = 0;\n  }\n  add(x) {\n    const p = this._partials;\n    let i = 0;\n    for (let j = 0; j < this._n && j < 32; j++) {\n      const y = p[j],\n        hi = x + y,\n        lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);\n      if (lo) p[i++] = lo;\n      x = hi;\n    }\n    p[i] = x;\n    this._n = i + 1;\n    return this;\n  }\n  valueOf() {\n    const p = this._partials;\n    let n = this._n, x, y, lo, hi = 0;\n    if (n > 0) {\n      hi = p[--n];\n      while (n > 0) {\n        x = hi;\n        y = p[--n];\n        hi = x + y;\n        lo = y - (hi - x);\n        if (lo) break;\n      }\n      if (n > 0 && ((lo < 0 && p[n - 1] < 0) || (lo > 0 && p[n - 1] > 0))) {\n        y = lo * 2;\n        x = hi + y;\n        if (y == x - hi) hi = x;\n      }\n    }\n    return hi;\n  }\n}\n\nexport function fsum(values, valueof) {\n  const adder = new Adder();\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        adder.add(value);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        adder.add(value);\n      }\n    }\n  }\n  return +adder;\n}\n\nexport function fcumsum(values, valueof) {\n  const adder = new Adder();\n  let index = -1;\n  return Float64Array.from(values, valueof === undefined\n      ? v => adder.add(+v || 0)\n      : v => adder.add(+valueof(v, ++index, values) || 0)\n  );\n}\n","function* flatten(arrays) {\n  for (const array of arrays) {\n    yield* array;\n  }\n}\n\nexport default function merge(arrays) {\n  return Array.from(flatten(arrays));\n}\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var hypot = Math.hypot;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math.js\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","import compose from \"./compose.js\";\nimport {abs, asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math.js\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport constant from \"./constant.js\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math.js\";\nimport {rotateRadians} from \"./rotation.js\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","import noop from \"../noop.js\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y, m) {\n      line.push([x, y, m]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","import {abs, epsilon} from \"./math.js\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import pointEqual from \"../pointEqual.js\";\nimport {epsilon} from \"../math.js\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    if (pointEqual(p0, p1)) {\n      if (!p0[2] && !p1[2]) {\n        stream.lineStart();\n        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n        stream.lineEnd();\n        return;\n      }\n      // handle degenerate cases by moving the point\n      p1[0] += 2 * epsilon;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","import {Adder} from \"d3-array\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, epsilon2, halfPi, pi, quarterPi, sign, sin, tau} from \"./math.js\";\n\nfunction longitude(point) {\n  return abs(point[0]) <= pi ? point[0] : sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nexport default function(polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  var sum = new Adder();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon2) ^ (winding & 1);\n}\n","import clipBuffer from \"./buffer.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {epsilon, halfPi} from \"../math.js\";\nimport polygonContains from \"../polygonContains.js\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","import clip from \"./index.js\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math.js\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian.js\";\nimport {circleStream} from \"../circle.js\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math.js\";\nimport pointEqual from \"../pointEqual.js\";\nimport clip from \"./index.js\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2))\n            point1[2] = 1;\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1], 2);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1], 3);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","import {abs, epsilon} from \"../math.js\";\nimport clipBuffer from \"./buffer.js\";\nimport clipLine from \"./line.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","export default x => x;\n","import {Adder} from \"d3-array\";\nimport {abs} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar areaSum = new Adder(),\n    areaRingSum = new Adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum = new Adder();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum = new Adder();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","import noop from \"../noop.js\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","import {sqrt} from \"../math.js\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n","import {tau} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n","import {Adder} from \"d3-array\";\nimport {sqrt} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar lengthSum = new Adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum = new Adder();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","export default function PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n","import identity from \"../identity.js\";\nimport stream from \"../stream.js\";\nimport pathArea from \"./area.js\";\nimport pathBounds from \"./bounds.js\";\nimport pathCentroid from \"./centroid.js\";\nimport PathContext from \"./context.js\";\nimport pathMeasure from \"./measure.js\";\nimport PathString from \"./string.js\";\n\nexport default function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","import {default as geoStream} from \"../stream.js\";\nimport boundsStream from \"../path/bounds.js\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n","import {cartesian} from \"../cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math.js\";\nimport {transformer} from \"../transform.js\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian.js\";\nimport clipCircle from \"../clip/circle.js\";\nimport clipRectangle from \"../clip/rectangle.js\";\nimport compose from \"../compose.js\";\nimport identity from \"../identity.js\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math.js\";\nimport {rotateRadians} from \"../rotation.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport resample from \"./resample.js\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy, sx, sy) {\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k * sx, (dy - y) / k * sy];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {\n  if (!alpha) return scaleTranslate(k, dx, dy, sx, sy);\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate angle\n      sx = 1, // reflectX\n      sy = 1, // reflectX\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;\n  };\n\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),\n        transform = scaleTranslateRotate(k, x - center[0], y - center[1], sx, sy, alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import {degrees, pi, radians} from \"../math.js\";\nimport {projectionMutator} from \"./index.js\";\n\nexport function conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n","import {abs, asin, atan2, cos, epsilon, pi, sign, sin, sqrt} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {cylindricalEqualAreaRaw} from \"./cylindricalEqualArea.js\";\n\nexport function conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y,\n        l = atan2(x, abs(r0y)) * sign(r0y);\n    if (r0y * n < 0)\n      l -= pi * sign(x) * sign(r0y);\n    return [l / n, asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n","import {asin, cos, sin} from \"../math.js\";\n\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n","import conicEqualArea from \"./conicEqualArea.js\";\n\nexport default function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n","import {asin, atan2, cos, sin, sqrt} from \"../math.js\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n        if (k === Infinity) return [2, 0];\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n","import {asin, sqrt} from \"../math.js\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nexport default function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n","import {acos, sin} from \"../math.js\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nexport default function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n","import {atan, exp, halfPi, log, pi, tan, tau} from \"../math.js\";\nimport rotation from \"../rotation.js\";\nimport projection from \"./index.js\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n","import {abs, atan, atan2, cos, epsilon, halfPi, log, pi, pow, sign, sin, sqrt, tan} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {mercatorRaw} from \"./mercator.js\";\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nexport function conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\n    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy),\n      l = atan2(x, abs(fy)) * sign(fy);\n    if (fy * n < 0)\n      l -= pi * sign(x) * sign(fy);\n    return [l / n, 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n}\n","import projection from \"./index.js\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n","import {abs, atan2, cos, epsilon, pi, sign, sin, sqrt} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {equirectangularRaw} from \"./equirectangular.js\";\n\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y,\n        l = atan2(x, abs(gy)) * sign(gy);\n    if (gy * n < 0)\n      l -= pi * sign(x) * sign(gy);\n    return [l / n, g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n","import projection from \"./index.js\";\nimport {abs, asin, cos, epsilon2, sin, sqrt} from \"../math.js\";\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\n\nexport function equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)), l2 = l * l, l6 = l2 * l2 * l2;\n  return [\n    lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),\n    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))\n  ];\n}\n\nequalEarthRaw.invert = function(x, y) {\n  var l = y, l2 = l * l, l6 = l2 * l2 * l2;\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n  return [\n    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l),\n    asin(sin(l) / M)\n  ];\n};\n\nexport default function() {\n  return projection(equalEarthRaw)\n      .scale(177.158);\n}\n","import {atan, cos, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nexport default function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n","import projection from \"./index.js\";\nimport {abs, epsilon} from \"../math.js\";\n\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n","import {asin, cos, epsilon, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n","import {atan, cos, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nexport default function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n","import {atan, exp, halfPi, log, tan} from \"../math.js\";\nimport {mercatorProjection} from \"./mercator.js\";\n\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n","export var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var ceil = Math.ceil;\nexport var cos = Math.cos;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var pow = Math.pow;\nexport var round = Math.round;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sin = Math.sin;\nexport var tan = Math.tan;\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var sqrt1_2 = Math.SQRT1_2;\nexport var sqrt2 = sqrt(2);\nexport var sqrtPi = sqrt(pi);\nexport var tau = pi * 2;\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport function sinci(x) {\n  return x ? x / Math.sin(x) : 1;\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function sqrt(x) {\n  return x > 0 ? Math.sqrt(x) : 0;\n}\n\nexport function tanh(x) {\n  x = exp(2 * x);\n  return (x - 1) / (x + 1);\n}\n\nexport function sinh(x) {\n  return (exp(x) - exp(-x)) / 2;\n}\n\nexport function cosh(x) {\n  return (exp(x) + exp(-x)) / 2;\n}\n\nexport function arsinh(x) {\n  return log(x + sqrt(x * x + 1));\n}\n\nexport function arcosh(x) {\n  return log(x + sqrt(x * x - 1));\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, asin, cos, epsilon, halfPi, pi, sin, sqrt2} from \"./math.js\";\n\nexport function mollweideBromleyTheta(cp, phi) {\n  var cpsinPhi = cp * sin(phi), i = 30, delta;\n  do phi -= delta = (phi + sin(phi) - cpsinPhi) / (1 + cos(phi));\n  while (abs(delta) > epsilon && --i > 0);\n  return phi / 2;\n}\n\nexport function mollweideBromleyRaw(cx, cy, cp) {\n\n  function forward(lambda, phi) {\n    return [cx * lambda * cos(phi = mollweideBromleyTheta(cp, phi)), cy * sin(phi)];\n  }\n\n  forward.invert = function(x, y) {\n    return y = asin(y / cy), [x / (cx * cos(y)), asin((2 * y + sin(2 * y)) / cp)];\n  };\n\n  return forward;\n}\n\nexport var mollweideRaw = mollweideBromleyRaw(sqrt2 / halfPi, sqrt2, pi);\n\nexport default function() {\n  return projection(mollweideRaw)\n      .scale(169.529);\n}\n","import {\n  geoAlbers,\n  geoAlbersUsa,\n  geoAzimuthalEqualArea,\n  geoAzimuthalEquidistant,\n  geoConicConformal,\n  geoConicEqualArea,\n  geoConicEquidistant,\n  geoEqualEarth,\n  geoEquirectangular,\n  geoGnomonic,\n  geoIdentity,\n  geoMercator,\n  geoNaturalEarth1,\n  geoOrthographic,\n  geoPath,\n  geoStereographic,\n  geoTransverseMercator\n} from 'd3-geo';\n\nimport {\n  geoMollweide\n} from 'd3-geo-projection';\n\nconst defaultPath = geoPath();\n\nexport const projectionProperties = [\n  // standard properties in d3-geo\n  'clipAngle',\n  'clipExtent',\n  'scale',\n  'translate',\n  'center',\n  'rotate',\n  'parallels',\n  'precision',\n  'reflectX',\n  'reflectY',\n\n  // extended properties in d3-geo-projections\n  'coefficient',\n  'distance',\n  'fraction',\n  'lobes',\n  'parallel',\n  'radius',\n  'ratio',\n  'spacing',\n  'tilt'\n];\n\n/**\n * Augment projections with their type and a copy method.\n */\nfunction create(type, constructor) {\n  return function projection() {\n    const p = constructor();\n\n    p.type = type;\n\n    p.path = geoPath().projection(p);\n\n    p.copy = p.copy || function() {\n      const c = projection();\n      projectionProperties.forEach(prop => {\n        if (p[prop]) c[prop](p[prop]());\n      });\n      c.path.pointRadius(p.path.pointRadius());\n      return c;\n    };\n\n    return p;\n  };\n}\n\nexport function projection(type, proj) {\n  if (!type || typeof type !== 'string') {\n    throw new Error('Projection type must be a name string.');\n  }\n  type = type.toLowerCase();\n  if (arguments.length > 1) {\n    projections[type] = create(type, proj);\n    return this;\n  } else {\n    return projections[type] || null;\n  }\n}\n\nexport function getProjectionPath(proj) {\n  return (proj && proj.path) || defaultPath;\n}\n\nconst projections = {\n  // base d3-geo projection types\n  albers:               geoAlbers,\n  albersusa:            geoAlbersUsa,\n  azimuthalequalarea:   geoAzimuthalEqualArea,\n  azimuthalequidistant: geoAzimuthalEquidistant,\n  conicconformal:       geoConicConformal,\n  conicequalarea:       geoConicEqualArea,\n  conicequidistant:     geoConicEquidistant,\n  equalEarth:           geoEqualEarth,\n  equirectangular:      geoEquirectangular,\n  gnomonic:             geoGnomonic,\n  identity:             geoIdentity,\n  mercator:             geoMercator,\n  mollweide:            geoMollweide,\n  naturalEarth1:        geoNaturalEarth1,\n  orthographic:         geoOrthographic,\n  stereographic:        geoStereographic,\n  transversemercator:   geoTransverseMercator\n};\n\nfor (const key in projections) {\n  projection(key, projections[key]);\n}\n","import {epsilon} from \"../math.js\";\nimport albers from \"./albers.js\";\nimport conicEqualArea from \"./conicEqualArea.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nexport default function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function(width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function(height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n","import clipRectangle from \"../clip/rectangle.js\";\nimport identity from \"../identity.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport {cos, degrees, radians, sin} from \"../math.js\";\n\nexport default function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, // scale, translate and reflect\n      alpha = 0, ca, sa, // angle\n      x0 = null, y0, x1, y1, // clip extent\n      kx = 1, ky = 1,\n      transform = transformer({\n        point: function(x, y) {\n          var p = projection([x, y])\n          this.stream.point(p[0], p[1]);\n        }\n      }),\n      postclip = identity,\n      cache,\n      cacheStream;\n\n  function reset() {\n    kx = k * sx;\n    ky = k * sy;\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  function projection (p) {\n    var x = p[0] * kx, y = p[1] * ky;\n    if (alpha) {\n      var t = y * ca - x * sa;\n      x = x * ca + y * sa;\n      y = t;\n    }    \n    return [x + tx, y + ty];\n  }\n  projection.invert = function(p) {\n    var x = p[0] - tx, y = p[1] - ty;\n    if (alpha) {\n      var t = y * ca + x * sa;\n      x = x * ca - y * sa;\n      y = t;\n    }\n    return [x / kx, y / ky];\n  };\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));\n  };\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, reset()) : k;\n  };\n  projection.translate = function(_) {\n    return arguments.length ? (tx = +_[0], ty = +_[1], reset()) : [tx, ty];\n  }\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, sa = sin(alpha), ca = cos(alpha), reset()) : alpha * degrees;\n  };\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, reset()) : sx < 0;\n  };\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, reset()) : sy < 0;\n  };\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  return projection;\n}\n"],"names":["Adder","constructor","this","_partials","Float64Array","_n","add","x","p","i","j","y","hi","lo","Math","abs","valueOf","n","merge","arrays","Array","from","array","flatten","epsilon","pi","PI","halfPi","quarterPi","tau","degrees","radians","atan","atan2","cos","exp","log","pow","sin","sign","sqrt","tan","acos","asin","noop","streamGeometry","geometry","stream","streamGeometryType","hasOwnProperty","type","streamObjectType","Feature","object","FeatureCollection","features","length","Sphere","sphere","Point","coordinates","point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","geoStream","spherical","cartesian","lambda","phi","cosPhi","cartesianDot","a","b","cartesianCross","cartesianAddInPlace","cartesianScale","vector","k","cartesianNormalizeInPlace","d","l","compose","invert","rotationIdentity","round","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","z","circleRadius","cosRadius","radius","clipBuffer","lines","line","m","push","rejoin","pop","concat","shift","result","pointEqual","Intersection","points","other","entry","o","e","v","clipRejoin","segments","compareIntersection","startInside","interpolate","subject","clip","forEach","segment","p0","p1","sort","link","start","current","isSubject","longitude","pointVisible","clipLine","sink","polygon","ring","ringBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","sinPhi","normal","angle","winding","sum","point0","lambda0","phi0","sinPhi0","cosPhi0","lambda1","sinPhi1","cosPhi1","point1","phi1","delta","absDelta","antimeridian","arc","intersection","phiArc","polygonContains","pointLine","clean","ringSegments","filter","validSegment","NaN","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","to","direction","clipCircle","cr","smallRadius","notHemisphere","visible","intersect","two","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","A","u","w","uu","t2","t","q","polar","q1","code","r","c0","v0","v00","point2","c","t0","t1","sinRadius","step","circleStream","clipMax","clipMin","clipRectangle","x0","y0","x1","y1","a1","corner","comparePoint","ca","cb","activeStream","x__","y__","v__","x_","y_","v_","first","bufferStream","clipStream","linePoint","a0","b0","b1","polygonInside","cleanInside","max","min","ax","ay","dx","dy","x00","y00","areaSum","areaRingSum","areaStream","areaRingStart","areaRingEnd","area","areaPointFirst","areaPoint","pathArea","Infinity","boundsStream","bounds","boundsStream$1","X0","Y0","Z0","X1","Y1","Z1","X2","Y2","Z2","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroid","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","pathCentroid","PathContext","context","_context","prototype","_radius","pointRadius","_","_line","_point","closePath","moveTo","lineTo","lengthRing","lengthSum","lengthStream","lengthPointFirst","lengthPoint","pathMeasure","PathString","_string","circle","geoPath","projection","projectionStream","contextStream","path","apply","arguments","measure","pathBounds","identity","transformer","methods","s","TransformStream","key","fit","fitBounds","clipExtent","scale","translate","fitExtent","extent","h","fitSize","size","fitWidth","width","fitHeight","height","_circle","join","cosMinDistance","resample","project","delta2","resampleLineTo","depth","d2","phi2","lambda2","x2","y2","dx2","dy2","dz","lambda00","a00","b00","c00","resampleStream","ringPoint","resampleNone","transformRadians","scaleTranslateRotate","sx","sy","alpha","transform","scaleTranslate","cosAlpha","sinAlpha","ai","bi","ci","fi","projectionMutator","projectAt","rotate","projectResample","projectTransform","projectRotateTransform","cache","cacheStream","theta","preclip","clipAntimeridian","postclip","recenter","center","reset","transformRotate","undefined","clipAngle","reflectX","reflectY","precision","conicProjection","parallels","conicEqualAreaRaw","sy0","forward","cylindricalEqualAreaRaw","r0","r0y","geoConicEqualArea","geoAlbers","conicEqualArea","azimuthalRaw","cx","cy","azimuthalInvert","sc","cc","azimuthalEqualAreaRaw","cxcy","azimuthalEquidistantRaw","mercatorRaw","mercatorProjection","reclip","tany","conicConformalRaw","cy0","f","fy","equirectangularRaw","conicEquidistantRaw","g","gy","nx","A1","A2","A3","A4","M","equalEarthRaw","l2","l6","gnomonicRaw","naturalEarth1Raw","phi4","orthographicRaw","stereographicRaw","transverseMercatorRaw","sqrt2","mollweideBromleyTheta","cp","cpsinPhi","mollweideRaw","mollweideBromleyRaw","defaultPath","projectionProperties","create","copy","prop","proj","Error","toLowerCase","projections","albers","albersusa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","albersUsa","streams","azimuthalequalarea","azimuthalequidistant","conicconformal","conicequalarea","conicequidistant","equalEarth","equirectangular","gnomonic","sa","tx","ty","kx","ky","mercator","mollweide","naturalEarth1","orthographic","stereographic","transversemercator"],"mappings":"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"}