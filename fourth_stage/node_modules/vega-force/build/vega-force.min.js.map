{"version":3,"file":"vega-force.min.js","sources":["../../../node_modules/d3-quadtree/src/add.js","../../../node_modules/d3-quadtree/src/quad.js","../../../node_modules/d3-quadtree/src/x.js","../../../node_modules/d3-quadtree/src/y.js","../../../node_modules/d3-quadtree/src/quadtree.js","../../../node_modules/d3-force/src/constant.js","../../../node_modules/d3-force/src/jiggle.js","../../../node_modules/d3-force/src/collide.js","../../../node_modules/d3-force/src/link.js","../../../node_modules/d3-quadtree/src/cover.js","../../../node_modules/d3-quadtree/src/data.js","../../../node_modules/d3-quadtree/src/extent.js","../../../node_modules/d3-quadtree/src/find.js","../../../node_modules/d3-quadtree/src/remove.js","../../../node_modules/d3-quadtree/src/root.js","../../../node_modules/d3-quadtree/src/size.js","../../../node_modules/d3-quadtree/src/visit.js","../../../node_modules/d3-quadtree/src/visitAfter.js","../../../node_modules/d3-dispatch/src/dispatch.js","../../../node_modules/d3-timer/src/timer.js","../../../node_modules/d3-force/src/lcg.js","../../../node_modules/d3-force/src/simulation.js","../src/Force.js","../../../node_modules/d3-force/src/center.js","../../../node_modules/d3-force/src/manyBody.js","../../../node_modules/d3-force/src/x.js","../../../node_modules/d3-force/src/y.js"],"sourcesContent":["export default function(d) {\n  const x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n","import tree_add, {addAll as tree_addAll} from \"./add.js\";\nimport tree_cover from \"./cover.js\";\nimport tree_data from \"./data.js\";\nimport tree_extent from \"./extent.js\";\nimport tree_find from \"./find.js\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove.js\";\nimport tree_root from \"./root.js\";\nimport tree_size from \"./size.js\";\nimport tree_visit from \"./visit.js\";\nimport tree_visitAfter from \"./visitAfter.js\";\nimport tree_x, {defaultX} from \"./x.js\";\nimport tree_y, {defaultY} from \"./y.js\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(random) {\n  return (random() - 0.5) * 1e-6;\n}\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function(radius) {\n  var nodes,\n      radii,\n      random,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(random), l += x * x;\n            if (y === 0) y = jiggle(random), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"node not found: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      random,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle(random);\n        y = target.y + target.vy - source.y - source.vy || jiggle(random);\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d])),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0 || 1,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n","import Quad from \"./quad.js\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","export default function() {\n  return this._root;\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n","var noop = {value: () => {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _) || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(undefined, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst a = 1664525;\nconst c = 1013904223;\nconst m = 4294967296; // 2^32\n\nexport default function() {\n  let s = 1;\n  return () => (s = (a * s + c) % m) / m;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer} from \"d3-timer\";\nimport lcg from \"./lcg.js\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = new Map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\"),\n      random = lcg();\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.forEach(function(force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(0.5 + i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes, random);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    randomSource: function(_) {\n      return arguments.length ? (random = _, forces.forEach(initializeForce), simulation) : random;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.delete(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n","import {Transform} from 'vega-dataflow';\nimport {\n  accessorFields, array, error, hasOwnProperty,\n  inherits, isFunction\n} from 'vega-util';\nimport {\n  forceCenter, forceCollide, forceLink,\n  forceManyBody, forceSimulation, forceX, forceY\n} from 'd3-force';\n\nconst ForceMap = {\n  center: forceCenter,\n  collide: forceCollide,\n  nbody: forceManyBody,\n  link: forceLink,\n  x: forceX,\n  y: forceY\n};\n\nconst Forces = 'forces',\n      ForceParams = [\n        'alpha', 'alphaMin', 'alphaTarget',\n        'velocityDecay', 'forces'\n      ],\n      ForceConfig = ['static', 'iterations'],\n      ForceOutput = ['x', 'y', 'vx', 'vy'];\n\n/**\n * Force simulation layout.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {Array<object>} params.forces - The forces to apply.\n */\nexport default function Force(params) {\n  Transform.call(this, null, params);\n}\n\nForce.Definition = {\n  'type': 'Force',\n  'metadata': {'modifies': true},\n  'params': [\n    { 'name': 'static', 'type': 'boolean', 'default': false },\n    { 'name': 'restart', 'type': 'boolean', 'default': false },\n    { 'name': 'iterations', 'type': 'number', 'default': 300 },\n    { 'name': 'alpha', 'type': 'number', 'default': 1 },\n    { 'name': 'alphaMin', 'type': 'number', 'default': 0.001 },\n    { 'name': 'alphaTarget', 'type': 'number', 'default': 0 },\n    { 'name': 'velocityDecay', 'type': 'number', 'default': 0.4 },\n    { 'name': 'forces', 'type': 'param', 'array': true,\n      'params': [\n        {\n          'key': {'force': 'center'},\n          'params': [\n            { 'name': 'x', 'type': 'number', 'default': 0 },\n            { 'name': 'y', 'type': 'number', 'default': 0 }\n          ]\n        },\n        {\n          'key': {'force': 'collide'},\n          'params': [\n            { 'name': 'radius', 'type': 'number', 'expr': true },\n            { 'name': 'strength', 'type': 'number', 'default': 0.7 },\n            { 'name': 'iterations', 'type': 'number', 'default': 1 }\n          ]\n        },\n        {\n          'key': {'force': 'nbody'},\n          'params': [\n            { 'name': 'strength', 'type': 'number', 'default': -30 },\n            { 'name': 'theta', 'type': 'number', 'default': 0.9 },\n            { 'name': 'distanceMin', 'type': 'number', 'default': 1 },\n            { 'name': 'distanceMax', 'type': 'number' }\n          ]\n        },\n        {\n          'key': {'force': 'link'},\n          'params': [\n            { 'name': 'links', 'type': 'data' },\n            { 'name': 'id', 'type': 'field' },\n            { 'name': 'distance', 'type': 'number', 'default': 30, 'expr': true },\n            { 'name': 'strength', 'type': 'number', 'expr': true },\n            { 'name': 'iterations', 'type': 'number', 'default': 1 }\n          ]\n        },\n        {\n          'key': {'force': 'x'},\n          'params': [\n            { 'name': 'strength', 'type': 'number', 'default': 0.1 },\n            { 'name': 'x', 'type': 'field' }\n          ]\n        },\n        {\n          'key': {'force': 'y'},\n          'params': [\n            { 'name': 'strength', 'type': 'number', 'default': 0.1 },\n            { 'name': 'y', 'type': 'field' }\n          ]\n        }\n      ] },\n    {\n      'name': 'as', 'type': 'string', 'array': true, 'modify': false,\n      'default': ForceOutput\n    }\n  ]\n};\n\ninherits(Force, Transform, {\n  transform(_, pulse) {\n    var sim = this.value,\n        change = pulse.changed(pulse.ADD_REM),\n        params = _.modified(ForceParams),\n        iters = _.iterations || 300;\n\n    // configure simulation\n    if (!sim) {\n      this.value = sim = simulation(pulse.source, _);\n      sim.on('tick', rerun(pulse.dataflow, this));\n      if (!_.static) {\n        change = true;\n        sim.tick(); // ensure we run on init\n      }\n      pulse.modifies('index');\n    } else {\n      if (change) {\n        pulse.modifies('index');\n        sim.nodes(pulse.source);\n      }\n      if (params || pulse.changed(pulse.MOD)) {\n        setup(sim, _, 0, pulse);\n      }\n    }\n\n    // run simulation\n    if (params || change || _.modified(ForceConfig)\n        || (pulse.changed() && _.restart))\n    {\n      sim.alpha(Math.max(sim.alpha(), _.alpha || 1))\n        .alphaDecay(1 - Math.pow(sim.alphaMin(), 1 / iters));\n\n      if (_.static) {\n        for (sim.stop(); --iters >= 0;) sim.tick();\n      } else {\n        if (sim.stopped()) sim.restart();\n        if (!change) return pulse.StopPropagation; // defer to sim ticks\n      }\n    }\n\n    return this.finish(_, pulse);\n  },\n\n  finish(_, pulse) {\n    const dataflow = pulse.dataflow;\n\n    // inspect dependencies, touch link source data\n    for (let args=this._argops, j=0, m=args.length, arg; j<m; ++j) {\n      arg = args[j];\n      if (arg.name !== Forces || arg.op._argval.force !== 'link') {\n        continue;\n      }\n      for (var ops=arg.op._argops, i=0, n=ops.length, op; i<n; ++i) {\n        if (ops[i].name === 'links' && (op = ops[i].op.source)) {\n          dataflow.pulse(op, dataflow.changeset().reflow());\n          break;\n        }\n      }\n    }\n\n    // reflow all nodes\n    return pulse.reflow(_.modified()).modifies(ForceOutput);\n  }\n});\n\nfunction rerun(df, op) {\n  return () => df.touch(op).run();\n}\n\nfunction simulation(nodes, _) {\n  const sim = forceSimulation(nodes),\n        stop = sim.stop,\n        restart = sim.restart;\n  let stopped = false;\n\n  sim.stopped = () => stopped;\n  sim.restart = () => (stopped = false, restart());\n  sim.stop = () => (stopped = true, stop());\n\n  return setup(sim, _, true).on('end', () => stopped = true);\n}\n\nfunction setup(sim, _, init, pulse) {\n  var f = array(_.forces), i, n, p, name;\n\n  for (i=0, n=ForceParams.length; i<n; ++i) {\n    p = ForceParams[i];\n    if (p !== Forces && _.modified(p)) sim[p](_[p]);\n  }\n\n  for (i=0, n=f.length; i<n; ++i) {\n    name = Forces + i;\n    p = init || _.modified(Forces, i) ? getForce(f[i])\n      : pulse && modified(f[i], pulse) ? sim.force(name)\n      : null;\n    if (p) sim.force(name, p);\n  }\n\n  for (n=(sim.numForces || 0); i<n; ++i) {\n    sim.force(Forces + i, null); // remove\n  }\n\n  sim.numForces = f.length;\n  return sim;\n}\n\nfunction modified(f, pulse) {\n  var k, v;\n  for (k in f) {\n    if (isFunction(v = f[k]) && pulse.modified(accessorFields(v)))\n      return 1;\n  }\n  return 0;\n}\n\nfunction getForce(_) {\n  var f, p;\n\n  if (!hasOwnProperty(ForceMap, _.force)) {\n    error('Unrecognized force: ' + _.force);\n  }\n  f = ForceMap[_.force]();\n\n  for (p in _) {\n    if (isFunction(f[p])) setForceParam(f[p], _[p], _);\n  }\n\n  return f;\n}\n\nfunction setForceParam(f, v, _) {\n  f(isFunction(v) ? d => v(d, _) : v);\n}\n","export default function(x, y) {\n  var nodes, strength = 1;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = (sx / n - x) * strength, sy = (sy / n - y) * strength, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  return force;\n}\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\nimport {x, y} from \"./simulation.js\";\n\nexport default function() {\n  var nodes,\n      node,\n      random,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(random), l += x * x;\n        if (y === 0) y = jiggle(random), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(random), l += x * x;\n      if (y === 0) y = jiggle(random), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n"],"names":["add","tree","x","y","d","isNaN","parent","xm","ym","xp","yp","right","bottom","i","j","node","_root","leaf","data","x0","_x0","y0","_y0","x1","_x1","y1","_y1","length","_x","call","_y","next","Array","Quad","defaultX","defaultY","quadtree","nodes","Quadtree","NaN","addAll","undefined","leaf_copy","copy","treeProto","prototype","constant","jiggle","random","vx","vy","index","find","nodeById","nodeId","get","Error","child","this","source","target","pop","push","cover","n","xz","yz","Infinity","Math","floor","z","visit","extent","_","arguments","radius","x2","y2","q","x3","y3","quads","dx","dy","d2","sqrt","remove","retainer","previous","removeAll","root","size","callback","visitAfter","noop","value","dispatch","t","test","Dispatch","parseTypenames","typenames","types","trim","split","map","name","indexOf","slice","hasOwnProperty","type","c","set","concat","constructor","on","typename","T","that","args","apply","taskHead","taskTail","frame","timeout","interval","clockLast","clockNow","clockSkew","clock","performance","now","Date","setFrame","window","requestAnimationFrame","bind","f","setTimeout","clearNow","Timer","_call","_time","_next","timer","delay","time","restart","wake","e","timerFlush","t0","t2","t1","sleep","nap","poke","clearTimeout","clearInterval","setInterval","TypeError","stop","m","initialAngle","PI","forceSimulation","simulation","alpha","alphaMin","alphaDecay","pow","alphaTarget","velocityDecay","forces","Map","stepper","step","event","s","lcg","tick","iterations","k","forEach","force","fx","fy","initializeNodes","angle","cos","sin","initializeForce","initialize","randomSource","delete","closest","ForceMap","center","strength","sx","sy","collide","radii","xi","yi","ri","ri2","prepare","quad","rj","r","l","_nodes","_random","nbody","strengths","distanceMin2","distanceMax2","theta2","accumulate","weight","abs","w","distanceMin","distanceMax","theta","link","links","id","distances","count","bias","defaultStrength","min","distance","b","initializeStrength","initializeDistance","Forces","ForceParams","ForceConfig","ForceOutput","Force","params","Transform","setup","sim","init","pulse","p","array","modified","getForce","numForces","v","isFunction","accessorFields","error","setForceParam","Definition","metadata","modifies","default","key","expr","modify","inherits","transform","df","op","change","changed","ADD_REM","iters","MOD","stopped","dataflow","touch","run","static","max","StopPropagation","finish","arg","_argops","_argval","ops","changeset","reflow"],"mappings":"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"}