{"version":3,"file":"vega-geo.min.js","sources":["../../../node_modules/d3-array/src/ticks.js","../../../node_modules/d3-array/src/max.js","../../../node_modules/d3-array/src/range.js","../src/util/contours.js","../src/util/quantize.js","../src/Isocontour.js","../src/util/density2D.js","../../../node_modules/d3-array/src/sum.js","../src/KDE2D.js","../src/Contour.js","../src/constants.js","../src/GeoJSON.js","../src/GeoPath.js","../src/GeoPoint.js","../src/GeoShape.js","../../../node_modules/d3-geo/src/math.js","../../../node_modules/d3-geo/src/graticule.js","../src/Graticule.js","../../../node_modules/d3-color/src/define.js","../../../node_modules/d3-color/src/color.js","../src/Heatmap.js","../src/Projection.js"],"sourcesContent":["var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function ticks(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    let r0 = Math.round(start / step), r1 = Math.round(stop / step);\n    if (r0 * step < start) ++r0;\n    if (r1 * step > stop) --r1;\n    ticks = new Array(n = r1 - r0 + 1);\n    while (++i < n) ticks[i] = (r0 + i) * step;\n  } else {\n    step = -step;\n    let r0 = Math.round(start * step), r1 = Math.round(stop * step);\n    if (r0 / step < start) ++r0;\n    if (r1 / step > stop) --r1;\n    ticks = new Array(n = r1 - r0 + 1);\n    while (++i < n) ticks[i] = (r0 + i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function max(values, valueof) {\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  }\n  return max;\n}\n","export default function range(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","import {error} from 'vega-util';\n\nfunction noop() {}\n\nconst cases = [\n  [],\n  [[[1.0, 1.5], [0.5, 1.0]]],\n  [[[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [0.5, 1.0]]],\n  [[[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 0.5], [1.0, 1.5]]],\n  [[[1.0, 0.5], [0.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 0.5]]],\n  [[[1.0, 1.5], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.5, 1.0]]],\n  [[[1.0, 1.5], [1.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 1.5]]],\n  []\n];\n\n// Implementation adapted from d3/d3-contour. Thanks!\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      smooth = smoothLinear;\n\n  function contours(values, tz) {\n    return tz.map(value => contour(values, value));\n  }\n\n  // Accumulate, smooth contour rings, assign holes to exterior rings.\n  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js\n  function contour(values, value) {\n    var polygons = [],\n        holes = [];\n\n    isorings(values, value, ring => {\n      smooth(ring, values, value);\n      if (area(ring) > 0) polygons.push([ring]);\n      else holes.push(ring);\n    });\n\n    holes.forEach(hole => {\n      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {\n        if (contains((polygon = polygons[i])[0], hole) !== -1) {\n          polygon.push(hole);\n          return;\n        }\n      }\n    });\n\n    return {\n      type: 'MultiPolygon',\n      value: value,\n      coordinates: polygons\n    };\n  }\n\n  // Marching squares with isolines stitched into rings.\n  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js\n  function isorings(values, value, callback) {\n    var fragmentByStart = new Array,\n        fragmentByEnd = new Array,\n        x, y, t0, t1, t2, t3;\n\n    // Special case for the first row (y = -1, t2 = t3 = 0).\n    x = y = -1;\n    t1 = values[0] >= value;\n    cases[t1 << 1].forEach(stitch);\n    while (++x < dx - 1) {\n      t0 = t1, t1 = values[x + 1] >= value;\n      cases[t0 | t1 << 1].forEach(stitch);\n    }\n    cases[t1 << 0].forEach(stitch);\n\n    // General case for the intermediate rows.\n    while (++y < dy - 1) {\n      x = -1;\n      t1 = values[y * dx + dx] >= value;\n      t2 = values[y * dx] >= value;\n      cases[t1 << 1 | t2 << 2].forEach(stitch);\n      while (++x < dx - 1) {\n        t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;\n        t3 = t2, t2 = values[y * dx + x + 1] >= value;\n        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);\n      }\n      cases[t1 | t2 << 3].forEach(stitch);\n    }\n\n    // Special case for the last row (y = dy - 1, t0 = t1 = 0).\n    x = -1;\n    t2 = values[y * dx] >= value;\n    cases[t2 << 2].forEach(stitch);\n    while (++x < dx - 1) {\n      t3 = t2, t2 = values[y * dx + x + 1] >= value;\n      cases[t2 << 2 | t3 << 3].forEach(stitch);\n    }\n    cases[t2 << 3].forEach(stitch);\n\n    function stitch(line) {\n      var start = [line[0][0] + x, line[0][1] + y],\n          end = [line[1][0] + x, line[1][1] + y],\n          startIndex = index(start),\n          endIndex = index(end),\n          f, g;\n      if (f = fragmentByEnd[startIndex]) {\n        if (g = fragmentByStart[endIndex]) {\n          delete fragmentByEnd[f.end];\n          delete fragmentByStart[g.start];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[f.start] = fragmentByEnd[g.end] = {start: f.start, end: g.end, ring: f.ring.concat(g.ring)};\n          }\n        } else {\n          delete fragmentByEnd[f.end];\n          f.ring.push(end);\n          fragmentByEnd[f.end = endIndex] = f;\n        }\n      } else if (f = fragmentByStart[endIndex]) {\n        if (g = fragmentByEnd[startIndex]) {\n          delete fragmentByStart[f.start];\n          delete fragmentByEnd[g.end];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[g.start] = fragmentByEnd[f.end] = {start: g.start, end: f.end, ring: g.ring.concat(f.ring)};\n          }\n        } else {\n          delete fragmentByStart[f.start];\n          f.ring.unshift(start);\n          fragmentByStart[f.start = startIndex] = f;\n        }\n      } else {\n        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {start: startIndex, end: endIndex, ring: [start, end]};\n      }\n    }\n  }\n\n  function index(point) {\n    return point[0] * 2 + point[1] * (dx + 1) * 4;\n  }\n\n  function smoothLinear(ring, values, value) {\n    ring.forEach(point => {\n      var x = point[0],\n          y = point[1],\n          xt = x | 0,\n          yt = y | 0,\n          v0,\n          v1 = values[yt * dx + xt];\n      if (x > 0 && x < dx && xt === x) {\n        v0 = values[yt * dx + xt - 1];\n        point[0] = x + (value - v0) / (v1 - v0) - 0.5;\n      }\n      if (y > 0 && y < dy && yt === y) {\n        v0 = values[(yt - 1) * dx + xt];\n        point[1] = y + (value - v0) / (v1 - v0) - 0.5;\n      }\n    });\n  }\n\n  contours.contour = contour;\n\n  contours.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.floor(_[0]), _1 = Math.floor(_[1]);\n    if (!(_0 >= 0 && _1 >= 0)) error('invalid size');\n    return dx = _0, dy = _1, contours;\n  };\n\n  contours.smooth = function(_) {\n    return arguments.length ? (smooth = _ ? smoothLinear : noop, contours) : smooth === smoothLinear;\n  };\n\n  return contours;\n}\n\nfunction area(ring) {\n  var i = 0,\n      n = ring.length,\n      area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\n  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\n  return area;\n}\n\nfunction contains(ring, hole) {\n  var i = -1, n = hole.length, c;\n  while (++i < n) if (c = ringContains(ring, hole[i])) return c;\n  return 0;\n}\n\nfunction ringContains(ring, point) {\n  var x = point[0], y = point[1], contains = -1;\n  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n    var pi = ring[i], xi = pi[0], yi = pi[1], pj = ring[j], xj = pj[0], yj = pj[1];\n    if (segmentContains(pi, pj, point)) return 0;\n    if (((yi > y) !== (yj > y)) && ((x < (xj - xi) * (y - yi) / (yj - yi) + xi))) contains = -contains;\n  }\n  return contains;\n}\n\nfunction segmentContains(a, b, c) {\n  var i; return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);\n}\n\nfunction collinear(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);\n}\n\nfunction within(p, q, r) {\n  return p <= q && q <= r || r <= q && q <= p;\n}\n","import {range, tickStep} from 'd3-array';\nimport {extent} from 'vega-util';\n\nexport default function(k, nice, zero) {\n  return function(values) {\n    var ex = extent(values),\n        start = zero ? Math.min(ex[0], 0) : ex[0],\n        stop = ex[1],\n        span = stop - start,\n        step = nice ? tickStep(start, stop, k) : (span / (k + 1));\n    return range(start + step, stop, step);\n  };\n}\n","import {max} from 'd3-array';\nimport {Transform, ingest, rederive} from 'vega-dataflow';\nimport {identity, inherits, isArray, isFunction, isNumber} from 'vega-util';\nimport contours from './util/contours';\nimport quantize from './util/quantize';\n\n/**\n * Generate isocontours (level sets) based on input raster grid data.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(object): *} [params.field] - The field with raster grid\n *   data. If unspecified, the tuple itself is interpreted as a raster grid.\n * @param {Array<number>} [params.thresholds] - Contour threshold array. If\n *   specified, the levels, nice, resolve, and zero parameters are ignored.\n * @param {number} [params.levels] - The desired number of contour levels.\n * @param {boolean} [params.nice] - Boolean flag indicating if the contour\n *   threshold values should be automatically aligned to \"nice\"\n *   human-friendly values. Setting this flag may cause the number of\n *   thresholds to deviate from the specified levels.\n * @param {string} [params.resolve] - The method for resolving thresholds\n *   across multiple input grids. If 'independent' (the default), threshold\n *   calculation will be performed separately for each grid. If 'shared', a\n *   single set of threshold values will be used for all input grids.\n * @param {boolean} [params.zero] - Boolean flag indicating if the contour\n *   threshold values should include zero.\n * @param {boolean} [params.smooth] - Boolean flag indicating if the contour\n *   polygons should be smoothed using linear interpolation. The default is\n *   true. The parameter is ignored when using density estimation.\n * @param {boolean} [params.scale] - Optional numerical value by which to\n *   scale the output isocontour coordinates. This parameter can be useful\n *   to scale the contours to match a desired output resolution.\n * @param {string} [params.as='contour'] - The output field in which to store\n *   the generated isocontour data (default 'contour').\n */\nexport default function Isocontour(params) {\n  Transform.call(this, null, params);\n}\n\nIsocontour.Definition = {\n  'type': 'Isocontour',\n  'metadata': {'generates': true},\n  'params': [\n    { 'name': 'field', 'type': 'field' },\n    { 'name': 'thresholds', 'type': 'number', 'array': true },\n    { 'name': 'levels', 'type': 'number' },\n    { 'name': 'nice', 'type': 'boolean', 'default': false },\n    { 'name': 'resolve', 'type': 'enum', 'values': ['shared', 'independent'], 'default': 'independent' },\n    { 'name': 'zero', 'type': 'boolean', 'default': true },\n    { 'name': 'smooth', 'type': 'boolean', 'default': true },\n    { 'name': 'scale', 'type': 'number', 'expr': true },\n    { 'name': 'translate', 'type': 'number', 'array': true, 'expr': true },\n    { 'name': 'as', 'type': 'string', 'null': true, 'default': 'contour' }\n  ]\n};\n\ninherits(Isocontour, Transform, {\n  transform(_, pulse) {\n    if (this.value && !pulse.changed() && !_.modified()) {\n      return pulse.StopPropagation;\n    }\n\n    var out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),\n        source = pulse.materialize(pulse.SOURCE).source,\n        field = _.field || identity,\n        contour = contours().smooth(_.smooth !== false),\n        tz = _.thresholds || levels(source, field, _),\n        as = _.as === null ? null : _.as || 'contour',\n        values = [];\n\n    source.forEach(t => {\n      const grid = field(t);\n\n      // generate contour paths in GeoJSON format\n      const paths = contour.size([grid.width, grid.height])(\n        grid.values, isArray(tz) ? tz : tz(grid.values)\n      );\n\n      // adjust contour path coordinates as needed\n      transformPaths(paths, grid, t, _);\n\n      // ingest; copy source data properties to output\n      paths.forEach(p => {\n        values.push(rederive(t, ingest(as != null ? {[as]: p} : p)));\n      });\n    });\n\n    if (this.value) out.rem = this.value;\n    this.value = out.source = out.add = values;\n\n    return out;\n  }\n});\n\nfunction levels(values, f, _) {\n  const q = quantize(_.levels || 10, _.nice, _.zero !== false);\n  return _.resolve !== 'shared'\n    ? q\n    : q(values.map(t => max(f(t).values)));\n}\n\nfunction transformPaths(paths, grid, datum, _) {\n  let s = _.scale || grid.scale,\n      t = _.translate || grid.translate;\n  if (isFunction(s)) s = s(datum, _);\n  if (isFunction(t)) t = t(datum, _);\n  if ((s === 1 || s == null) && !t) return;\n\n  const sx = (isNumber(s) ? s : s[0]) || 1,\n        sy = (isNumber(s) ? s : s[1]) || 1,\n        tx = t && t[0] || 0,\n        ty = t && t[1] || 0;\n\n  paths.forEach(transform(grid, sx, sy, tx, ty));\n}\n\nexport function transform(grid, sx, sy, tx, ty) {\n  const x1 = grid.x1 || 0,\n        y1 = grid.y1 || 0,\n        flip = sx * sy < 0;\n\n  function transformPolygon(coordinates) {\n    coordinates.forEach(transformRing);\n  }\n\n  function transformRing(coordinates) {\n    if (flip) coordinates.reverse(); // maintain winding order\n    coordinates.forEach(transformPoint);\n  }\n\n  function transformPoint(coordinates) {\n    coordinates[0] = (coordinates[0] - x1) * sx + tx;\n    coordinates[1] = (coordinates[1] - y1) * sy + ty;\n  }\n\n  return function(geometry) {\n    geometry.coordinates.forEach(transformPolygon);\n    return geometry;\n  };\n}\n","import {bandwidthNRD} from 'vega-statistics';\nimport {array, constant, error, isFunction, one} from 'vega-util';\nimport {sum} from 'd3-array';\n\nfunction radius(bw, data, f) {\n  const v = bw >= 0 ? bw : bandwidthNRD(data, f);\n  return Math.round((Math.sqrt(4 * v * v + 1) - 1) / 2);\n}\n\nfunction number(_) {\n  return isFunction(_) ? _ : constant(+_);\n}\n\n// Implementation adapted from d3/d3-contour. Thanks!\nexport default function() {\n  var x = d => d[0],\n      y = d => d[1],\n      weight = one,\n      bandwidth = [-1, -1],\n      dx = 960,\n      dy = 500,\n      k = 2; // log2(cellSize)\n\n  function density(data, counts) {\n    const rx = radius(bandwidth[0], data, x) >> k, // blur x-radius\n          ry = radius(bandwidth[1], data, y) >> k, // blur y-radius\n          ox = rx ? rx + 2 : 0, // x-offset padding for blur\n          oy = ry ? ry + 2 : 0, // y-offset padding for blur\n          n = 2 * ox + (dx >> k), // grid width\n          m = 2 * oy + (dy >> k), // grid height\n          values0 = new Float32Array(n * m),\n          values1 = new Float32Array(n * m);\n\n    let values = values0;\n\n    data.forEach(d => {\n      const xi = ox + (+x(d) >> k),\n            yi = oy + (+y(d) >> k);\n\n      if (xi >= 0 && xi < n && yi >= 0 && yi < m) {\n        values0[xi + yi * n] += +weight(d);\n      }\n    });\n\n    if (rx > 0 && ry > 0) {\n      blurX(n, m, values0, values1, rx);\n      blurY(n, m, values1, values0, ry);\n      blurX(n, m, values0, values1, rx);\n      blurY(n, m, values1, values0, ry);\n      blurX(n, m, values0, values1, rx);\n      blurY(n, m, values1, values0, ry);\n    } else if (rx > 0) {\n      blurX(n, m, values0, values1, rx);\n      blurX(n, m, values1, values0, rx);\n      blurX(n, m, values0, values1, rx);\n      values = values1;\n    } else if (ry > 0) {\n      blurY(n, m, values0, values1, ry);\n      blurY(n, m, values1, values0, ry);\n      blurY(n, m, values0, values1, ry);\n      values = values1;\n    }\n\n    // scale density estimates\n    // density in points per square pixel or probability density\n    const s = counts ? Math.pow(2, -2 * k) : 1 / sum(values);\n    for (let i=0, sz=n*m; i<sz; ++i) values[i] *= s;\n\n    return {\n      values: values,\n      scale: 1 << k,\n      width: n,\n      height: m,\n      x1: ox,\n      y1: oy,\n      x2: ox + (dx >> k),\n      y2: oy + (dy >> k)\n    };\n  }\n\n  density.x = function(_) {\n    return arguments.length ? (x = number(_), density) : x;\n  };\n\n  density.y = function(_) {\n    return arguments.length ? (y = number(_), density) : y;\n  };\n\n  density.weight = function(_) {\n    return arguments.length ? (weight = number(_), density) : weight;\n  };\n\n  density.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = +_[0], _1 = +_[1];\n    if (!(_0 >= 0 && _1 >= 0)) error('invalid size');\n    return dx = _0, dy = _1, density;\n  };\n\n  density.cellSize = function(_) {\n    if (!arguments.length) return 1 << k;\n    if (!((_ = +_) >= 1)) error('invalid cell size');\n    k = Math.floor(Math.log(_) / Math.LN2);\n    return density;\n  };\n\n  density.bandwidth = function(_) {\n    if (!arguments.length) return bandwidth;\n    _ = array(_);\n    if (_.length === 1) _ = [+_[0], +_[0]];\n    if (_.length !== 2) error('invalid bandwidth');\n    return bandwidth = _, density;\n  };\n\n  return density;\n}\n\nfunction blurX(n, m, source, target, r) {\n  const w = (r << 1) + 1;\n  for (let j = 0; j < m; ++j) {\n    for (let i = 0, sr = 0; i < n + r; ++i) {\n      if (i < n) {\n        sr += source[i + j * n];\n      }\n      if (i >= r) {\n        if (i >= w) {\n          sr -= source[i - w + j * n];\n        }\n        target[i - r + j * n] = sr / Math.min(i + 1, n - 1 + w - i, w);\n      }\n    }\n  }\n}\n\nfunction blurY(n, m, source, target, r) {\n  const w = (r << 1) + 1;\n  for (let i = 0; i < n; ++i) {\n    for (let j = 0, sr = 0; j < m + r; ++j) {\n      if (j < m) {\n        sr += source[i + j * n];\n      }\n      if (j >= r) {\n        if (j >= w) {\n          sr -= source[i + (j - w) * n];\n        }\n        target[i + (j - r) * n] = sr / Math.min(j + 1, m - 1 + w - j, w);\n      }\n    }\n  }\n}\n","export default function sum(values, valueof) {\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        sum += value;\n      }\n    }\n  }\n  return sum;\n}\n","import density2D from './util/density2D';\nimport {Transform, ingest} from 'vega-dataflow';\nimport {accessorName, inherits} from 'vega-util';\n\n/**\n * Perform 2D kernel-density estimation of point data.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {Array<number>} params.size - The [width, height] extent (in\n *   units of input pixels) over which to perform density estimation.\n * @param {function(object): number} params.x - The x-coordinate accessor.\n * @param {function(object): number} params.y - The y-coordinate accessor.\n * @param {function(object): number} [params.weight] - The weight accessor.\n * @param {Array<function(object): *>} [params.groupby] - An array of accessors\n *   to groupby.\n * @param {number} [params.cellSize] - Contour density calculation cell size.\n *   This parameter determines the level of spatial approximation. For example,\n *   the default value of 4 maps to 2x reductions in both x- and y- dimensions.\n *   A value of 1 will result in an output raster grid whose dimensions exactly\n *   matches the size parameter.\n * @param {Array<number>} [params.bandwidth] - The KDE kernel bandwidths,\n *   in pixels. The input can be a two-element array specifying separate\n *   x and y bandwidths, or a single-element array specifying both. If the\n *   bandwidth is unspecified or less than zero, the bandwidth will be\n *   automatically determined.\n * @param {boolean} [params.counts=false] - A boolean flag indicating if the\n *   output values should be probability estimates (false, default) or\n *   smoothed counts (true).\n * @param {string} [params.as='grid'] - The output field in which to store\n *   the generated raster grid (default 'grid').\n */\nexport default function KDE2D(params) {\n  Transform.call(this, null, params);\n}\n\nKDE2D.Definition = {\n  'type': 'KDE2D',\n  'metadata': {'generates': true},\n  'params': [\n    { 'name': 'size', 'type': 'number', 'array': true, 'length': 2, 'required': true },\n    { 'name': 'x', 'type': 'field', 'required': true },\n    { 'name': 'y', 'type': 'field', 'required': true },\n    { 'name': 'weight', 'type': 'field' },\n    { 'name': 'groupby', 'type': 'field', 'array': true },\n    { 'name': 'cellSize', 'type': 'number' },\n    { 'name': 'bandwidth', 'type': 'number', 'array': true, 'length': 2 },\n    { 'name': 'counts', 'type': 'boolean', 'default': false },\n    { 'name': 'as', 'type': 'string', 'default': 'grid'}\n  ]\n};\n\nconst PARAMS = ['x', 'y', 'weight', 'size', 'cellSize', 'bandwidth'];\n\nexport function params(obj, _) {\n  PARAMS.forEach(param => _[param] != null ? obj[param](_[param]) : 0);\n  return obj;\n}\n\ninherits(KDE2D, Transform, {\n  transform(_, pulse) {\n    if (this.value && !pulse.changed() && !_.modified())\n      return pulse.StopPropagation;\n\n    var out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),\n        source = pulse.materialize(pulse.SOURCE).source,\n        groups = partition(source, _.groupby),\n        names = (_.groupby || []).map(accessorName),\n        kde = params(density2D(), _),\n        as = _.as || 'grid',\n        values = [];\n\n    function set(t, vals) {\n      for (let i=0; i<names.length; ++i) t[names[i]] = vals[i];\n      return t;\n    }\n\n    // generate density raster grids\n    values = groups.map(g => ingest(\n      set({[as]: kde(g, _.counts)}, g.dims)\n    ));\n\n    if (this.value) out.rem = this.value;\n    this.value = out.source = out.add = values;\n\n    return out;\n  }\n});\n\nexport function partition(data, groupby) {\n  var groups = [],\n      get = f => f(t),\n      map, i, n, t, k, g;\n\n  // partition data points into groups\n  if (groupby == null) {\n    groups.push(data);\n  } else {\n    for (map={}, i=0, n=data.length; i<n; ++i) {\n      t = data[i];\n      k = groupby.map(get);\n      g = map[k];\n      if (!g) {\n        map[k] = (g = []);\n        g.dims = k;\n        groups.push(g);\n      }\n      g.push(t);\n    }\n  }\n\n  return groups;\n}\n","import {Transform, ingest} from 'vega-dataflow';\nimport {inherits, isArray} from 'vega-util';\nimport {transform} from './Isocontour';\nimport {params} from './KDE2D';\nimport contours from './util/contours';\nimport density2D from './util/density2D';\nimport quantize from './util/quantize';\n\n/**\n * Generate contours based on kernel-density estimation of point data.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {Array<number>} params.size - The dimensions [width, height] over which to compute contours.\n *  If the values parameter is provided, this must be the dimensions of the input data.\n *  If density estimation is performed, this is the output view dimensions in pixels.\n * @param {Array<number>} [params.values] - An array of numeric values representing an\n *  width x height grid of values over which to compute contours. If unspecified, this\n *  transform will instead attempt to compute contours for the kernel density estimate\n *  using values drawn from data tuples in the input pulse.\n * @param {function(object): number} [params.x] - The pixel x-coordinate accessor for density estimation.\n * @param {function(object): number} [params.y] - The pixel y-coordinate accessor for density estimation.\n * @param {function(object): number} [params.weight] - The data point weight accessor for density estimation.\n * @param {number} [params.cellSize] - Contour density calculation cell size.\n * @param {number} [params.bandwidth] - Kernel density estimation bandwidth.\n * @param {Array<number>} [params.thresholds] - Contour threshold array. If\n *   this parameter is set, the count and nice parameters will be ignored.\n * @param {number} [params.count] - The desired number of contours.\n * @param {boolean} [params.nice] - Boolean flag indicating if the contour\n *   threshold values should be automatically aligned to \"nice\"\n *   human-friendly values. Setting this flag may cause the number of\n *   thresholds to deviate from the specified count.\n * @param {boolean} [params.smooth] - Boolean flag indicating if the contour\n *   polygons should be smoothed using linear interpolation. The default is\n *   true. The parameter is ignored when using density estimation.\n */\nexport default function Contour(params) {\n  Transform.call(this, null, params);\n}\n\nContour.Definition = {\n  'type': 'Contour',\n  'metadata': {'generates': true},\n  'params': [\n    { 'name': 'size', 'type': 'number', 'array': true, 'length': 2, 'required': true },\n    { 'name': 'values', 'type': 'number', 'array': true },\n    { 'name': 'x', 'type': 'field' },\n    { 'name': 'y', 'type': 'field' },\n    { 'name': 'weight', 'type': 'field' },\n    { 'name': 'cellSize', 'type': 'number' },\n    { 'name': 'bandwidth', 'type': 'number' },\n    { 'name': 'count', 'type': 'number' },\n    { 'name': 'nice', 'type': 'boolean', 'default': false },\n    { 'name': 'thresholds', 'type': 'number', 'array': true },\n    { 'name': 'smooth', 'type': 'boolean', 'default': true }\n  ]\n};\n\ninherits(Contour, Transform, {\n  transform(_, pulse) {\n    if (this.value && !pulse.changed() && !_.modified()) {\n      return pulse.StopPropagation;\n    }\n\n    var out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),\n        contour = contours().smooth(_.smooth !== false),\n        values = _.values,\n        thresh = _.thresholds || quantize(_.count || 10, _.nice, !!values),\n        size = _.size, grid, post;\n\n    if (!values) {\n      values = pulse.materialize(pulse.SOURCE).source;\n      grid = params(density2D(), _)(values, true);\n      post = transform(grid, grid.scale || 1, grid.scale || 1, 0, 0);\n      size = [grid.width, grid.height];\n      values = grid.values;\n    }\n\n    thresh = isArray(thresh) ? thresh : thresh(values);\n    values = contour.size(size)(values, thresh);\n    if (post) values.forEach(post);\n\n    if (this.value) out.rem = this.value;\n    this.value = out.source = out.add = (values || []).map(ingest);\n\n    return out;\n  }\n});\n","export const Feature = 'Feature';\nexport const FeatureCollection = 'FeatureCollection';\nexport const MultiPoint = 'MultiPoint';\n","import {Feature, FeatureCollection, MultiPoint} from './constants';\nimport {Transform} from 'vega-dataflow';\nimport {accessorFields, identity, inherits} from 'vega-util';\n\n/**\n * Consolidate an array of [longitude, latitude] points or GeoJSON features\n * into a combined GeoJSON object. This transform is particularly useful for\n * combining geo data for a Projection's fit argument. The resulting GeoJSON\n * data is available as this transform's value. Input pulses are unchanged.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {Array<function(object): *>} [params.fields] - A two-element array\n *   of field accessors for the longitude and latitude values.\n * @param {function(object): *} params.geojson - A field accessor for\n *   retrieving GeoJSON feature data.\n */\nexport default function GeoJSON(params) {\n  Transform.call(this, null, params);\n}\n\nGeoJSON.Definition = {\n  'type': 'GeoJSON',\n  'metadata': {},\n  'params': [\n    { 'name': 'fields', 'type': 'field', 'array': true, 'length': 2 },\n    { 'name': 'geojson', 'type': 'field' }\n  ]\n};\n\ninherits(GeoJSON, Transform, {\n  transform(_, pulse) {\n    var features = this._features,\n        points = this._points,\n        fields = _.fields,\n        lon = fields && fields[0],\n        lat = fields && fields[1],\n        geojson = _.geojson || (!fields && identity),\n        flag = pulse.ADD,\n        mod;\n\n    mod = _.modified()\n      || pulse.changed(pulse.REM)\n      || pulse.modified(accessorFields(geojson))\n      || (lon && (pulse.modified(accessorFields(lon))))\n      || (lat && (pulse.modified(accessorFields(lat))));\n\n    if (!this.value || mod) {\n      flag = pulse.SOURCE;\n      this._features = (features = []);\n      this._points = (points = []);\n    }\n\n    if (geojson) {\n      pulse.visit(flag, t => features.push(geojson(t)));\n    }\n\n    if (lon && lat) {\n      pulse.visit(flag, t => {\n        var x = lon(t),\n            y = lat(t);\n        if (x != null && y != null && (x = +x) === x && (y = +y) === y) {\n          points.push([x, y]);\n        }\n      });\n      features = features.concat({\n        type: Feature,\n        geometry: {\n          type: MultiPoint,\n          coordinates: points\n        }\n      });\n    }\n\n    this.value = {\n      type: FeatureCollection,\n      features: features\n    };\n  }\n});\n","import {Transform} from 'vega-dataflow';\nimport {getProjectionPath} from 'vega-projection';\nimport {identity, inherits} from 'vega-util';\n\n/**\n * Map GeoJSON data to an SVG path string.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(number, number): *} params.projection - The cartographic\n *   projection to apply.\n * @param {function(object): *} [params.field] - The field with GeoJSON data,\n *   or null if the tuple itself is a GeoJSON feature.\n * @param {string} [params.as='path'] - The output field in which to store\n *   the generated path data (default 'path').\n */\nexport default function GeoPath(params) {\n  Transform.call(this, null, params);\n}\n\nGeoPath.Definition = {\n  'type': 'GeoPath',\n  'metadata': {'modifies': true},\n  'params': [\n    { 'name': 'projection', 'type': 'projection' },\n    { 'name': 'field', 'type': 'field' },\n    { 'name': 'pointRadius', 'type': 'number', 'expr': true },\n    { 'name': 'as', 'type': 'string', 'default': 'path' }\n  ]\n};\n\ninherits(GeoPath, Transform, {\n  transform(_, pulse) {\n    var out = pulse.fork(pulse.ALL),\n        path = this.value,\n        field = _.field || identity,\n        as = _.as || 'path',\n        flag = out.SOURCE;\n\n    if (!path || _.modified()) {\n      // parameters updated, reset and reflow\n      this.value = path = getProjectionPath(_.projection);\n      out.materialize().reflow();\n    } else {\n      flag = field === identity || pulse.modified(field.fields)\n        ? out.ADD_MOD\n        : out.ADD;\n    }\n\n    const prev = initPath(path, _.pointRadius);\n    out.visit(flag, t => t[as] = path(field(t)));\n    path.pointRadius(prev);\n\n    return out.modifies(as);\n  }\n});\n\nfunction initPath(path, pointRadius) {\n  const prev = path.pointRadius();\n  path.context(null);\n  if (pointRadius != null) {\n    path.pointRadius(pointRadius);\n  }\n  return prev;\n}\n","import {Transform} from 'vega-dataflow';\nimport {inherits} from 'vega-util';\n\n/**\n * Geo-code a longitude/latitude point to an x/y coordinate.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(number, number): *} params.projection - The cartographic\n *   projection to apply.\n * @param {Array<function(object): *>} params.fields - A two-element array of\n *   field accessors for the longitude and latitude values.\n * @param {Array<string>} [params.as] - A two-element array of field names\n *   under which to store the result. Defaults to ['x','y'].\n */\nexport default function GeoPoint(params) {\n  Transform.call(this, null, params);\n}\n\nGeoPoint.Definition = {\n  'type': 'GeoPoint',\n  'metadata': {'modifies': true},\n  'params': [\n    { 'name': 'projection', 'type': 'projection', 'required': true },\n    { 'name': 'fields', 'type': 'field', 'array': true, 'required': true, 'length': 2 },\n    { 'name': 'as', 'type': 'string', 'array': true, 'length': 2, 'default': ['x', 'y'] }\n  ]\n};\n\ninherits(GeoPoint, Transform, {\n  transform(_, pulse) {\n    var proj = _.projection,\n        lon = _.fields[0],\n        lat = _.fields[1],\n        as = _.as || ['x', 'y'],\n        x = as[0],\n        y = as[1],\n        mod;\n\n    function set(t) {\n      const xy = proj([lon(t), lat(t)]);\n      if (xy) {\n        t[x] = xy[0];\n        t[y] = xy[1];\n      } else {\n        t[x] = undefined;\n        t[y] = undefined;\n      }\n    }\n\n    if (_.modified()) {\n      // parameters updated, reflow\n      pulse = pulse.materialize().reflow(true).visit(pulse.SOURCE, set);\n    } else {\n      mod = pulse.modified(lon.fields) || pulse.modified(lat.fields);\n      pulse.visit(mod ? pulse.ADD_MOD : pulse.ADD, set);\n    }\n\n    return pulse.modifies(as);\n  }\n});\n","import {Transform} from 'vega-dataflow';\nimport {getProjectionPath} from 'vega-projection';\nimport {field, inherits} from 'vega-util';\n\n/**\n * Annotate items with a geopath shape generator.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(number, number): *} params.projection - The cartographic\n *   projection to apply.\n * @param {function(object): *} [params.field] - The field with GeoJSON data,\n *   or null if the tuple itself is a GeoJSON feature.\n * @param {string} [params.as='shape'] - The output field in which to store\n *   the generated path data (default 'shape').\n */\nexport default function GeoShape(params) {\n  Transform.call(this, null, params);\n}\n\nGeoShape.Definition = {\n  'type': 'GeoShape',\n  'metadata': {'modifies': true, 'nomod': true},\n  'params': [\n    { 'name': 'projection', 'type': 'projection' },\n    { 'name': 'field', 'type': 'field', 'default': 'datum' },\n    { 'name': 'pointRadius', 'type': 'number', 'expr': true },\n    { 'name': 'as', 'type': 'string', 'default': 'shape' }\n  ]\n};\n\ninherits(GeoShape, Transform, {\n  transform(_, pulse) {\n    var out = pulse.fork(pulse.ALL),\n        shape = this.value,\n        as = _.as || 'shape',\n        flag = out.ADD;\n\n    if (!shape || _.modified()) {\n      // parameters updated, reset and reflow\n      this.value = shape = shapeGenerator(\n        getProjectionPath(_.projection),\n        _.field || field('datum'),\n        _.pointRadius\n      );\n      out.materialize().reflow();\n      flag = out.SOURCE;\n    }\n\n    out.visit(flag, t => t[as] = shape);\n\n    return out.modifies(as);\n  }\n});\n\nfunction shapeGenerator(path, field, pointRadius) {\n  const shape = pointRadius == null\n    ? _ => path(field(_))\n    : _ => {\n      var prev = path.pointRadius(),\n          value = path.pointRadius(pointRadius)(field(_));\n      path.pointRadius(prev);\n      return value;\n    };\n  shape.context = _ => {\n    path.context(_);\n    return shape;\n  };\n\n  return shape;\n}\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var hypot = Math.hypot;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","import {range} from \"d3-array\";\nimport {abs, ceil, epsilon} from \"./math.js\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nexport default function graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nexport function graticule10() {\n  return graticule()();\n}\n","import {Transform, ingest, replace} from 'vega-dataflow';\nimport {inherits, isFunction} from 'vega-util';\nimport {geoGraticule} from 'd3-geo';\n\n/**\n * GeoJSON feature generator for creating graticules.\n * @constructor\n */\nexport default function Graticule(params) {\n  Transform.call(this, [], params);\n  this.generator = geoGraticule();\n}\n\nGraticule.Definition = {\n  'type': 'Graticule',\n  'metadata': {'changes': true, 'generates': true},\n  'params': [\n    { 'name': 'extent', 'type': 'array', 'array': true, 'length': 2,\n      'content': {'type': 'number', 'array': true, 'length': 2} },\n    { 'name': 'extentMajor', 'type': 'array', 'array': true, 'length': 2,\n      'content': {'type': 'number', 'array': true, 'length': 2} },\n    { 'name': 'extentMinor', 'type': 'array', 'array': true, 'length': 2,\n      'content': {'type': 'number', 'array': true, 'length': 2} },\n    { 'name': 'step', 'type': 'number', 'array': true, 'length': 2 },\n    { 'name': 'stepMajor', 'type': 'number', 'array': true, 'length': 2, 'default': [90, 360] },\n    { 'name': 'stepMinor', 'type': 'number', 'array': true, 'length': 2, 'default': [10, 10] },\n    { 'name': 'precision', 'type': 'number', 'default': 2.5 }\n  ]\n};\n\ninherits(Graticule, Transform, {\n  transform(_, pulse) {\n    var src = this.value,\n        gen = this.generator, t;\n\n    if (!src.length || _.modified()) {\n      for (const prop in _) {\n        if (isFunction(gen[prop])) {\n          gen[prop](_[prop]);\n        }\n      }\n    }\n\n    t = gen();\n    if (src.length) {\n      pulse.mod.push(replace(src[0], t));\n    } else {\n      pulse.add.push(ingest(t));\n    }\n    src[0] = t;\n\n    return pulse;\n  }\n});\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define.js\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  copy: function(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nexport default function color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\n      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\n      : null) // invalid hex\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n}\n\nfunction rgb_formatRgb() {\n  var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n  return (a === 1 ? \"rgb(\" : \"rgba(\")\n      + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n      + (a === 1 ? \")\" : \", \" + a + \")\");\n}\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"hsl(\" : \"hsla(\")\n        + (this.h || 0) + \", \"\n        + (this.s || 0) * 100 + \"%, \"\n        + (this.l || 0) * 100 + \"%\"\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","import {max} from 'd3-array';\nimport {rgb} from 'd3-color';\nimport {canvas} from 'vega-canvas';\nimport {Transform} from 'vega-dataflow';\nimport {\n  accessorFields, constant, extend, identity,\n  inherits, isFunction, toSet, zero\n} from 'vega-util';\n\n/**\n * Render a heatmap image for input raster grid data.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(object): *} [params.field] - The field with raster grid\n *   data. If unspecified, the tuple itself is interpreted as a raster grid.\n * @param {string} [params.color] - A constant color value or function for\n *   individual pixel color. If a function, it will be invoked with an input\n *   object that includes $x, $y, $value, and $max fields for the grid.\n * @param {number} [params.opacity] - A constant opacity value or function for\n *   individual pixel opacity. If a function, it will be invoked with an input\n *   object that includes $x, $y, $value, and $max fields for the grid.\n * @param {string} [params.resolve] - The method for resolving maximum values\n *   across multiple input grids. If 'independent' (the default), maximum\n *   calculation will be performed separately for each grid. If 'shared',\n *   a single global maximum will be used for all input grids.\n * @param {string} [params.as='image'] - The output field in which to store\n *   the generated bitmap canvas images (default 'image').\n */\nexport default function Heatmap(params) {\n  Transform.call(this, null, params);\n}\n\nHeatmap.Definition = {\n  'type': 'heatmap',\n  'metadata': {'modifies': true},\n  'params': [\n    { 'name': 'field', 'type': 'field' },\n    { 'name': 'color', 'type': 'string', 'expr': true},\n    { 'name': 'opacity', 'type': 'number', 'expr': true},\n    { 'name': 'resolve', 'type': 'enum', 'values': ['shared', 'independent'], 'default': 'independent' },\n    { 'name': 'as', 'type': 'string', 'default': 'image' }\n  ]\n};\n\ninherits(Heatmap, Transform, {\n  transform(_, pulse) {\n    if (!pulse.changed() && !_.modified()) {\n      return pulse.StopPropagation;\n    }\n\n    var source = pulse.materialize(pulse.SOURCE).source,\n        shared = _.resolve === 'shared',\n        field = _.field || identity,\n        opacity = opacity_(_.opacity, _),\n        color = color_(_.color, _),\n        as = _.as || 'image',\n        obj = {\n          $x: 0, $y: 0, $value: 0,\n          $max: shared ? max(source.map(t => max(field(t).values))) : 0\n        };\n\n    source.forEach(t => {\n      const v = field(t);\n\n      // build proxy data object\n      const o = extend({}, t, obj);\n      // set maximum value if not globally shared\n      if (!shared) o.$max = max(v.values || []);\n\n      // generate canvas image\n      // optimize color/opacity if not pixel-dependent\n      t[as] = toCanvas(v, o,\n        color.dep ? color : constant(color(o)),\n        opacity.dep ? opacity : constant(opacity(o))\n      );\n    });\n\n    return pulse.reflow(true).modifies(as);\n  }\n});\n\n// get image color function\nfunction color_(color, _) {\n  let f;\n  if (isFunction(color)) {\n    f = obj => rgb(color(obj, _));\n    f.dep = dependency(color);\n  } else {\n    // default to mid-grey\n    f = constant(rgb(color || '#888'));\n  }\n  return f;\n}\n\n// get image opacity function\nfunction opacity_(opacity, _) {\n  let f;\n  if (isFunction(opacity)) {\n    f = obj => opacity(obj, _);\n    f.dep = dependency(opacity);\n  } else if (opacity) {\n    f = constant(opacity);\n  } else {\n    // default to [0, max] opacity gradient\n    f = obj => (obj.$value / obj.$max) || 0;\n    f.dep = true;\n  }\n  return f;\n}\n\n// check if function depends on individual pixel data\nfunction dependency(f) {\n  if (!isFunction(f)) return false;\n  const set = toSet(accessorFields(f));\n  return set.$x || set.$y || set.$value || set.$max;\n}\n\n// render raster grid to canvas\nfunction toCanvas(grid, obj, color, opacity) {\n  const n = grid.width,\n        m = grid.height,\n        x1 = grid.x1 || 0,\n        y1 = grid.y1 || 0,\n        x2 = grid.x2 || n,\n        y2 = grid.y2 || m,\n        val = grid.values,\n        value = val ? i => val[i] : zero,\n        can = canvas(x2 - x1, y2 - y1),\n        ctx = can.getContext('2d'),\n        img = ctx.getImageData(0, 0, x2 - x1, y2 - y1),\n        pix = img.data;\n\n  for (let j=y1, k=0; j<y2; ++j) {\n    obj.$y = j - y1;\n    for (let i=x1, r=j*n; i<x2; ++i, k+=4) {\n      obj.$x = i - x1;\n      obj.$value = value(i + r);\n\n      const v = color(obj);\n      pix[k+0] = v.r;\n      pix[k+1] = v.g;\n      pix[k+2] = v.b;\n      pix[k+3] = ~~(255 * opacity(obj));\n    }\n  }\n\n  ctx.putImageData(img, 0, 0);\n  return can;\n}\n","import {Feature, FeatureCollection} from './constants';\nimport {Transform} from 'vega-dataflow';\nimport {projection, projectionProperties} from 'vega-projection';\nimport {array, error, inherits, isFunction} from 'vega-util';\n\n/**\n * Maintains a cartographic projection.\n * @constructor\n * @param {object} params - The parameters for this operator.\n */\nexport default function Projection(params) {\n  Transform.call(this, null, params);\n  this.modified(true); // always treat as modified\n}\n\ninherits(Projection, Transform, {\n  transform(_, pulse) {\n    let proj = this.value;\n\n    if (!proj || _.modified('type')) {\n      this.value = (proj = create(_.type));\n      projectionProperties.forEach(prop => {\n        if (_[prop] != null) set(proj, prop, _[prop]);\n      });\n    } else {\n      projectionProperties.forEach(prop => {\n        if (_.modified(prop)) set(proj, prop, _[prop]);\n      });\n    }\n\n    if (_.pointRadius != null) proj.path.pointRadius(_.pointRadius);\n    if (_.fit) fit(proj, _);\n\n    return pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS);\n  }\n});\n\nfunction fit(proj, _) {\n  const data = collectGeoJSON(_.fit);\n  _.extent ? proj.fitExtent(_.extent, data)\n    : _.size ? proj.fitSize(_.size, data) : 0;\n}\n\nfunction create(type) {\n  const constructor = projection((type || 'mercator').toLowerCase());\n  if (!constructor) error('Unrecognized projection type: ' + type);\n  return constructor();\n}\n\nfunction set(proj, key, value) {\n   if (isFunction(proj[key])) proj[key](value);\n}\n\nexport function collectGeoJSON(data) {\n  data = array(data);\n  return data.length === 1 ? data[0]\n    : {\n        type: FeatureCollection,\n        features: data.reduce((a, f) => a.concat(featurize(f)), [])\n      };\n}\n\nfunction featurize(f) {\n  return f.type === FeatureCollection\n    ? f.features\n    : array(f).filter(d => d != null).map(\n        d => d.type === Feature ? d : {type: Feature, geometry: d}\n      );\n}\n"],"names":["e10","Math","sqrt","e5","e2","max","values","valueof","undefined","value","index","range","start","stop","step","n","arguments","length","i","ceil","Array","noop","cases","contours","dx","dy","smooth","smoothLinear","tz","map","contour","polygons","holes","callback","x","y","t0","t1","t2","t3","fragmentByStart","fragmentByEnd","forEach","stitch","line","f","g","end","startIndex","endIndex","ring","push","concat","unshift","isorings","area","hole","polygon","contains","type","coordinates","point","v0","xt","yt","v1","size","_","_0","floor","_1","error","c","ringContains","j","pi","xi","yi","pj","xj","yj","segmentContains","a","b","p","q","r","collinear","quantize","k","nice","zero","ex","extent","min","span","count","step0","abs","step1","pow","log","LN10","tickStep","Isocontour","params","Transform","call","this","transform","grid","sx","sy","tx","ty","x1","y1","flip","transformPolygon","transformRing","reverse","transformPoint","geometry","radius","bw","data","v","bandwidthNRD","round","number","isFunction","constant","density2D","d","weight","one","bandwidth","density","counts","rx","ry","ox","oy","m","values0","Float32Array","values1","blurX","blurY","s","sum","sz","scale","width","height","x2","y2","cellSize","LN2","array","source","target","w","sr","KDE2D","Definition","metadata","generates","name","default","expr","null","inherits","pulse","changed","modified","StopPropagation","out","fork","NO_SOURCE","NO_FIELDS","materialize","SOURCE","field","identity","thresholds","levels","resolve","t","as","paths","isArray","datum","translate","isNumber","transformPaths","rederive","ingest","rem","add","required","PARAMS","obj","param","Contour","groups","groupby","get","dims","partition","names","accessorName","kde","vals","set","post","thresh","Feature","FeatureCollection","GeoJSON","GeoPath","GeoPoint","GeoShape","features","mod","_features","points","_points","fields","lon","lat","geojson","flag","ADD","REM","accessorFields","visit","modifies","ALL","path","getProjectionPath","projection","reflow","ADD_MOD","prev","pointRadius","context","initPath","proj","xy","nomod","shape","shapeGenerator","epsilon","graticuleX","y0","graticuleY","x0","Graticule","generator","X1","X0","Y1","Y0","X","Y","DX","DY","precision","graticule","lines","filter","outline","slice","extentMajor","extentMinor","stepMajor","stepMinor","geoGraticule","define","constructor","factory","prototype","extend","parent","definition","Object","create","key","Color","changes","content","src","gen","prop","replace","darker","brighter","reI","reN","reP","reHex","reRgbInteger","RegExp","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color_formatHex","rgb","formatHex","color_formatRgb","formatRgb","color","format","l","trim","toLowerCase","exec","parseInt","rgbn","Rgb","rgba","hsla","hasOwnProperty","NaN","rgbConvert","o","opacity","rgb_formatHex","hex","rgb_formatRgb","isNaN","toString","h","Hsl","hslConvert","hsl2rgb","m1","m2","Heatmap","dependency","toSet","$x","$y","$value","$max","Projection","copy","channels","assign","displayable","formatHsl","shared","dep","opacity_","color_","val","can","canvas","ctx","getContext","img","getImageData","pix","putImageData","toCanvas","projectionProperties","fit","reduce","featurize","collectGeoJSON","fitExtent","fitSize"],"mappings":"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"}